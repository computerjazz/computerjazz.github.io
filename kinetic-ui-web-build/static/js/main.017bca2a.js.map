{"version":3,"file":"static/js/main.017bca2a.js","mappings":"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","sources":["components/StackPreview.tsx","components/CarouselPreview.tsx","components/FlipPreview.tsx","components/DeckPreview.tsx","components/GridPreview.tsx","components/BookPreview.tsx","components/DotPreview.tsx","components/MenuTitle.tsx","screens/Menu.tsx","components/BackButton.tsx","procs/springFill.ts","procs/timingFill.ts","procs/dots.ts","screens/Dots.tsx","screens/CardRotate.tsx","screens/CardFlip.tsx","procs/stack.ts","screens/CardStack.tsx","procs/carousel.ts","screens/Carousel.tsx","procs/deck.ts","screens/Deck.tsx","procs/grid.ts","screens/Grid.tsx","screens/Book.tsx","nav/Navigator.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from 'react';\nimport { View, Platform, Text, StyleSheet } from 'react-native';\nimport Animated, { EasingNode as Easing } from 'react-native-reanimated';\nimport MenuTitle from './MenuTitle';\n\nconst {\n  Value,\n  modulo,\n  add,\n  sub,\n  multiply,\n  divide,\n  startClock,\n  stopClock,\n  clockRunning,\n  cond,\n  set,\n  Clock,\n  debug,\n  timing,\n  round,\n  block,\n} = Animated;\n\nconst isAndroid = Platform.OS === 'android';\n\nclass StackPreview extends React.Component {\n  constructor(props: any) {\n    super(props);\n    const { focused, clock, width, height } = props\n    const tickHeight = height * 0.85;\n    const numCards = 7;\n\n    this.mainHandler = React.createRef();\n    this.translationY = new Value(0);\n    this.prevTrans = new Value(0);\n    this.cumulativeTrans = new Value(0);\n    this.perspective = new Value(850);\n    this.auto = new Value(0);\n\n    const previewState = {\n      finished: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n      frameTime: new Value(0),\n    };\n\n    const previewConfig = {\n      toValue: numCards * tickHeight,\n      duration: 20000,\n      easing: Easing.linear,\n    };\n\n    const runClock = [\n      cond(\n        clockRunning(clock),\n        [\n          timing(clock, previewState, previewConfig),\n          cond(previewState.finished, [\n            stopClock(clock),\n            set(previewState.finished, 0),\n            set(previewState.time, 0),\n            set(previewState.frameTime, 0),\n            set(previewState.position, 0),\n            startClock(clock),\n          ]),\n        ],\n        [startClock(clock)]\n      ),\n      previewState.position,\n    ];\n\n    this._tempOffset = new Value(0);\n    this.cumulativeTrans = add(\n      this.prevTrans,\n      this.translationY,\n      cond(focused, runClock, 0) // NOTE: was causing janky transitions\n    );\n\n    this.activeIndex = Animated.interpolateNode(\n      modulo(this.cumulativeTrans, tickHeight * numCards),\n      {\n        inputRange: [0, tickHeight],\n        outputRange: [0, 1],\n      }\n    );\n\n    this.cards = [...Array(numCards)].fill(0).map((d, i, arr) => {\n      const colorMultiplier = 255 / (arr.length - 1);\n      const index = new Value(i);\n      const size = width * 0.75;\n      const gestureState = new Value(0);\n\n      const scale = new Value(1);\n      const interpolatedY = Animated.interpolateNode(this.cumulativeTrans, {\n        inputRange: [-tickHeight, 0, tickHeight],\n        outputRange: [sub(index, 1), index, add(index, 1)],\n      });\n\n      const transToIndex = modulo(interpolatedY, arr.length);\n\n      const indexToTrans = sub(\n        Animated.interpolateNode([transToIndex], {\n          inputRange: [0, 0.5, 0.75, 1, arr.length],\n          outputRange: [0, size, size * 1.9, size * 1.25, 0],\n        }),\n        60\n      );\n\n      const translateY = indexToTrans;\n\n      const iosConfig = {\n        inputRange: [0, 0.5, 1, 2, arr.length],\n        outputRange: [60, 0, 80, 70, 60],\n      };\n\n      const androidConfig = {\n        inputRange: [0, 0.5, 1, 2, arr.length],\n        outputRange: [70, 0, 35, 50, 70],\n      };\n\n      const rotateX = Animated.concat(\n        Animated.interpolateNode(\n          transToIndex,\n          isAndroid ? androidConfig : iosConfig\n        ),\n        'deg'\n      );\n\n      const scaleXY = Animated.interpolateNode(transToIndex, {\n        inputRange: [0, 0.25, 0.5, 1, arr.length],\n        outputRange: [\n          scale,\n          multiply(scale, 1.2),\n          multiply(scale, 1.24),\n          divide(scale, 2),\n          scale,\n        ],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      });\n\n      const zIndex = Animated.interpolateNode(transToIndex, {\n        inputRange: [0, 0.7, 0.75, 1, arr.length],\n        outputRange: [999, 999, 0, 0, 200],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      });\n\n      // Somehow the top of the stack ended up as index 0\n      // but the next item down is arr.length - 1\n      // for example, indices would go\n      // 0\n      // 4\n      // 3\n      // 2\n      // 1\n      // `colorIndex` compensates for this\n      const maxIndex = arr.length - 1;\n      const colorIndex = maxIndex - ((i + maxIndex) % arr.length);\n      return {\n        color: `rgba(${colorIndex * colorMultiplier}, ${Math.abs(\n          128 - colorIndex * colorMultiplier\n        )}, ${255 - colorIndex * colorMultiplier}, 0.9)`,\n        scale: scaleXY,\n        zIndex: round(zIndex),\n        translateY,\n        size,\n        rotateX,\n        index: colorIndex,\n        gestureState,\n        perspective: this.perspective,\n      };\n    });\n  }\n\n  renderCard = (\n    {\n      perspective,\n      color,\n      scale,\n      translateY,\n      zIndex,\n      rotateX,\n      size,\n      gestureState,\n      index,\n    },\n    i\n  ) => {\n    return (\n      <Animated.View\n        key={`card-${i}`}\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          borderRadius: 10,\n          zIndex,\n          transform: [\n            { perspective },\n            { translateY },\n            { scaleX: scale },\n            { scaleY: scale },\n            { rotateX },\n          ],\n        }}>\n        <Animated.View style={{ flex: 1, width: size }}>\n          <Text\n            style={{\n              color: 'white',\n              fontSize: 70,\n              fontWeight: 'bold',\n            }}>\n            {}\n          </Text>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          width: '100%',\n          padding: 30,\n          overflow: 'hidden',\n          backgroundColor: 'seashell',\n          borderRadius: this.props.width,\n        }}>\n        {this.cards.map(this.renderCard)}\n      </View>\n    );\n  }\n}\n\nexport default StackPreview;\n","import * as React from 'react';\nimport { View, Platform, Text } from 'react-native';\nimport Animated, { EasingNode as Easing } from 'react-native-reanimated';\nconst {\n  Value,\n  modulo,\n  add,\n  sub,\n  multiply,\n  diff,\n  min,\n  abs,\n  set,\n  sin,\n  cond,\n  clockRunning,\n  startClock,\n  stopClock,\n  round,\n  timing,\n} = Animated;\n\nconst isAndroid = Platform.OS === 'android';\n\nclass CarouselPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    const { focused, clock, height, width } = props;\n    this.mainHandler = React.createRef();\n\n    this.translationX = new Value(0);\n    this.prevTrans = new Value(0);\n    this.cumulativeTrans = new Value(0);\n    this.perspective = new Value(850);\n    this.activeCardIndex = new Value(0);\n\n    this.animState = {\n      finished: new Value(0),\n      position: new Value(0),\n      frameTime: new Value(0),\n      time: new Value(0),\n    };\n\n    this.animConfig = {\n      toValue: new Value(0),\n      duration: new Value(5000),\n      easing: Easing.out(Easing.ease),\n    };\n\n    this.altState = {\n      finished: new Value(0),\n      position: new Value(0),\n      velocity: new Value(0),\n      time: new Value(0),\n    };\n\n    this.altConfig = {\n      damping: 15,\n      mass: 1,\n      stiffness: 150,\n      overshootClamping: false,\n      toValue: new Value(0),\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    const numCards = 7;\n    const tickWidth = width / 2;\n    const size = width * 0.8;\n    const maxIndex = numCards - 1;\n\n    this._temp = new Value(0);\n    const previewState = {\n      finished: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n      frameTime: new Value(0),\n    };\n\n    const previewConfig = {\n      toValue: numCards * tickWidth,\n      duration: 20000,\n      easing: Easing.linear,\n    };\n\n    const runClock = [\n      cond(\n        clockRunning(clock),\n        [\n          timing(clock, previewState, previewConfig),\n          cond(previewState.finished, [\n            stopClock(clock),\n            set(previewState.finished, 0),\n            set(previewState.time, 0),\n            set(previewState.frameTime, 0),\n            set(previewState.position, 0),\n            startClock(clock),\n          ]),\n        ],\n        [startClock(clock)]\n      ),\n      previewState.position,\n    ];\n    const cumulativeTrans = add(\n      this.prevTrans,\n      this.translationX,\n      cond(focused, runClock, 0)\n    );\n\n    this.cards = [...Array(numCards)].fill(0).map((d, i, arr) => {\n      const colorMultiplier = 255 / maxIndex;\n      const index = new Value(i);\n\n      const interpolated = Animated.interpolateNode(cumulativeTrans, {\n        inputRange: [-tickWidth, 0, tickWidth],\n        outputRange: [sub(index, 1), index, add(index, 1)],\n      });\n\n      const leanAmt = multiply(diff(cumulativeTrans), 0.005);\n      const transToIndex = modulo(\n        [set(this._temp, leanAmt), interpolated],\n        arr.length\n      );\n\n      const rotateX = multiply(\n        min(0.2, abs(add(leanAmt, this.altState.position))),\n        -1\n      );\n      const rotateY = Animated.interpolateNode(transToIndex, {\n        inputRange: [0, numCards],\n        outputRange: [0, Math.PI * 2],\n      });\n\n      const translateX = multiply(width / 3, sin(rotateY));\n      const translateY = 0;\n\n      const scaleXY = add(1, multiply(0.2, sin(add(Math.PI / 2, rotateY))));\n\n      const zIndex = Animated.interpolateNode(transToIndex, {\n        inputRange: [0, arr.length / 2, arr.length],\n        outputRange: [200, 0, 200],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      });\n\n      // Somehow the top of the stack ended up as index 0\n      // but the next item down is arr.length - 1\n      // for example, indices would go\n      // 0\n      // 4\n      // 3\n      // 2\n      // 1\n      // `colorIndex` compensates for this\n      const colorIndex = maxIndex - ((i + maxIndex) % arr.length);\n      const cardTransY = new Value(0);\n      const cardGestureState = new Value(0);\n      const cardState = {\n        finished: new Value(0),\n        position: new Value(1),\n        velocity: new Value(0),\n        time: new Value(0),\n      };\n\n      const cardConfig = {\n        damping: 15,\n        mass: 1,\n        stiffness: 150,\n        overshootClamping: false,\n        toValue: new Value(0),\n        restSpeedThreshold: 0.001,\n        restDisplacementThreshold: 0.001,\n      };\n\n      return {\n        color: `rgba(${colorIndex * colorMultiplier}, ${Math.abs(\n          128 - colorIndex * colorMultiplier\n        )}, ${255 - colorIndex * colorMultiplier}, 0.9)`,\n        scale: scaleXY,\n        zIndex: round(zIndex),\n        translateX,\n        translateY,\n        size,\n        rotateY,\n        rotateX,\n        index: i,\n        perspective: this.perspective,\n        handlerRef: React.createRef(),\n        cardState,\n        cardConfig,\n        cardTransY,\n        cardGestureState,\n      };\n    });\n  }\n\n  renderCard = (\n    {\n      handlerRef,\n      cardTransY,\n      cardClock,\n      cardState,\n      cardConfig,\n      cardGestureState,\n      index,\n      color,\n      scale,\n      translateX,\n      translateY,\n      zIndex,\n      rotateY,\n      rotateX,\n      size,\n      perspective,\n    },\n    i\n  ) => {\n    return (\n      <Animated.View\n        key={`carousel-preview-card-${i}`}\n        style={{\n          zIndex,\n          position: 'absolute',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: size / 3.5,\n          height: size,\n          transform: [\n            { perspective },\n            { translateX },\n            { scaleX: scale },\n            { scaleY: scale },\n          ],\n        }}>\n        <Animated.View\n          style={{\n            position: 'absolute',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: size / 3.5,\n            height: size,\n            backgroundColor: color,\n            borderRadius: 10,\n            zIndex,\n            transform: [\n              { perspective },\n              { translateY: add(translateY, cardTransY) },\n              { rotateY: Animated.concat(rotateY, 'rad') },\n              { rotateX: Animated.concat(rotateX, 'rad') },\n            ],\n          }}>\n          <Text style={{ color: 'white', fontSize: 20, fontWeight: 'bold' }}>\n            {}\n          </Text>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          // padding: 30,\n          overflow: 'hidden',\n          backgroundColor: 'seashell',\n          borderRadius: this.props.width,\n        }}>\n        {this.cards.map(this.renderCard)}\n      </View>\n    );\n  }\n}\n\nexport default CarouselPreview;\n","import * as React from 'react'\nimport { View, Text } from 'react-native'\nimport Animated, { concat, EasingNode as Easing } from 'react-native-reanimated'\nconst {\n  Value,\n  modulo,\n  add,\n  sub,\n  multiply,\n  divide,\n  startClock,\n  stopClock,\n  clockRunning,\n  cond,\n  set,\n  timing,\n  round,\n  color,\n  floor,\n  abs,\n} = Animated\n\nclass FlipPreview extends React.Component {\n\n  constructor({ clock, focused, width }) {\n    super()\n    const size = width / 2\n    const numCards = 7\n    const maxIndex = numCards - 1\n    const colorMultiplier = 255 / maxIndex\n    this.startIndexY = new Value(0)\n\n    this.translationX = new Value(0)\n    this.translationY = new Value(0)\n    this.prevX = new Value(0)\n    this.prevY = new Value(0)\n\n\n    const previewState = {\n      finished: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n      frameTime: new Value(0),\n    }\n\n    const previewConfig = {\n      toValue: size * numCards,\n      duration: 20000,\n      easing: Easing.linear,\n    }\n\n    const runClock = [\n      cond(clockRunning(clock), [\n        timing(clock, previewState, previewConfig),\n        cond(previewState.finished, [\n          stopClock(clock),\n          set(previewState.finished, 0),\n          set(previewState.time, 0),\n          set(previewState.frameTime, 0),\n          set(previewState.position, 0),\n          startClock(clock),\n        ])\n      ], [\n        startClock(clock),\n      ]),\n      previewState.position\n    ]\n\n    this._cy = add(this.prevY, this.translationY)\n    this._cx = add(\n      this.prevX,\n      this.translationX,\n      cond(focused, runClock, 0)\n    )\n\n    this._iy = Animated.interpolateNode(this._cy, {\n      inputRange: [-size, 0, size],\n      outputRange: [180, 0, -180],\n    })\n\n    this._ix = Animated.interpolateNode(this._cx, {\n      inputRange: [-size, 0, size],\n      outputRange: [-180, 0, 180],\n    })\n\n    this.indexX = floor(divide(add(this._ix, 90), 180))\n    this.indexY = floor(divide(add(this._iy, 90), 180))\n    this.index = add(this.indexX, this.indexY)\n\n    this.targetX = multiply(size, this.indexX)\n    this.targetY = multiply(size, this.indexY, -1)\n\n    this._mx = sub(modulo(add(this._ix, 90), 180), 90)\n    this._my = sub(modulo(add(this._iy, 90), 180), 90)\n\n    this._isInverted = modulo(sub(this.startIndexY, this.indexY), 2)\n\n    this.rotateX = Animated.concat(this._my, 'deg')\n    this.rotateY = Animated.concat([\n      cond(this._isInverted, multiply(this._mx, -1), this._mx),\n    ], 'deg')\n\n    const colorIndex = sub(maxIndex, modulo(add(this.index, maxIndex), numCards))\n\n    const c = multiply(colorIndex, colorMultiplier)\n    const r = round(c)\n    const g = round(abs(sub(128, c)))\n    const b = round(sub(255, c))\n    this.color = color(r, g, b)\n\n    this.perspective = new Value(850)\n\n    this.springState = {\n      finished: new Value(0),\n      velocity: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n    };\n\n    this.springConfig = {\n      damping: 8,\n      mass: 1,\n      stiffness: 50.296,\n      overshootClamping: false,\n      toValue: new Value(1),\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n\n    this.diffX = new Value(0)\n    this.diffY = new Value(0)\n    this._px = new Value(0)\n    this._py = new Value(0)\n\n    this._x = this.rotateX\n    this._y = this.rotateY\n  }\n\n  renderCard = ({ color, scale, translateY, zIndex, rotateX, size, gestureState, index }, i) => {\n    return (\n\n      <Animated.View\n        key={`card-${i}`}\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          borderRadius: 10,\n          zIndex,\n          transform: [\n            { perspective: new Value(850) },\n            { translateY },\n            { scaleX: scale },\n            { scaleY: scale },\n            { rotateX },\n          ]\n        }}\n      >\n        <Animated.View style={{ flex: 1, width: size }}>\n          <Text style={{\n            color: 'white',\n            fontSize: 70,\n            fontWeight: 'bold',\n          }}>\n            { }\n          </Text>\n        </Animated.View>\n      </Animated.View>\n    )\n  }\n  render() {\n    const { height, width } = this.props\n    const size = width / 2\n    return (\n\n      <View style={{\n        flex: 1,\n        backgroundColor: 'seashell',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        borderRadius: width,\n        overflow: 'hidden',\n      }}\n      >\n        <Animated.View\n          style={{\n            position: 'absolute',\n            top: height / 2,\n            right: width / 2,\n            width: size * .75,\n            height: size * .75,\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\n            borderRadius: 5,\n            zIndex: -999,\n            transform: [\n\n              { perspective: this.perspective },\n              { rotateX: this._x },\n              { rotateY: this._y },\n            ]\n          }}\n        />\n        <Animated.View\n          style={{\n            opacity: 0.8,\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: size,\n            height: size,\n            backgroundColor: this.color,\n            borderRadius: 5,\n            transform: [\n\n              { perspective: this.perspective },\n              { rotateX: concat(this._x, \"deg\") },\n              { rotateY: concat(this._y, \"deg\") },\n            ]\n          }}\n        />\n      </View>\n    )\n  }\n}\n\nexport default FlipPreview","import React, { Component } from 'react';\nimport { View, Dimensions, Text, Platform, StyleSheet } from 'react-native';\nimport Animated, { EasingNode as Easing } from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  State,\n  TapGestureHandler,\n} from 'react-native-gesture-handler';\nimport BackButton from './BackButton';\nimport MenuTitle from './MenuTitle';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst {\n  onChange,\n  debug,\n  and,\n  not,\n  set,\n  neq,\n  cond,\n  eq,\n  or,\n  add,\n  multiply,\n  greaterThan,\n  lessThan,\n  floor,\n  spring,\n  timing,\n  divide,\n  block,\n  round,\n  startClock,\n  stopClock,\n  clockRunning,\n  sub,\n  defined,\n  Value,\n  Clock,\n  event,\n  sin,\n  modulo,\n  abs,\n  cos,\n} = Animated;\n\nconst numCards = 7;\nconst flingThresh = 500;\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n    const { height, width, clock, focused } = props;\n    const tickHeight = height * 0.75;\n\n    this.mainHandler = React.createRef();\n    this.translationY = new Value(0);\n    this.prevTrans = new Value(0);\n    this.gestureState = new Value(State.UNDETERMINED);\n    this.perspective = new Value(850);\n    this._mounted = new Value(1);\n\n    this.sprState = {\n      finished: new Value(0),\n      velocity: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n    };\n\n    this.sprConfig = {\n      damping: 20,\n      mass: 0.3,\n      stiffness: 30,\n      overshootClamping: false,\n      toValue: new Value(0),\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    const previewState = {\n      position: new Value(height / 2),\n      finished: new Value(0),\n      time: new Value(0),\n      velocity: new Value(0),\n    };\n\n    const previewConfig = {\n      toValue: new Value(0),\n      damping: 8,\n      mass: 1,\n      stiffness: new Value(50.296),\n      overshootClamping: false,\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    const runClock = [\n      cond(\n        and(focused, clockRunning(clock)),\n        [\n          spring(clock, previewState, previewConfig),\n          cond(previewState.finished, [\n            stopClock(clock),\n            set(previewState.finished, 0),\n            set(previewState.time, 0),\n            set(previewState.velocity, 0),\n            set(\n              previewConfig.toValue,\n              cond(greaterThan(previewConfig.toValue, 0), 0, height / 2)\n            ),\n            startClock(clock),\n          ]),\n        ],\n        [startClock(clock)]\n      ),\n      previewState.position,\n    ];\n\n    const ry = Animated.interpolateNode(runClock, {\n      inputRange: [0, height],\n      outputRange: [0, 1],\n    });\n\n    this.cards = [...Array(numCards)].fill(0).map((d, i, arr) => {\n      const colorMultiplier = 255 / (arr.length - 1);\n      const index = new Value(i);\n      const size = width * 0.75;\n      const gestureState = new Value(0);\n      const midpoint = (arr.length - 1) / 2;\n      const maxIndex = arr.length - 1;\n\n      // 0: 10\n      // 1: 5\n      // 2: 0\n      // 3: 5\n      // 4: 10\n      // midpoint: 2\n      //\n\n      // const maxY = height / (i + 1.75)\n      const distFromMid = midpoint - i;\n      const ratio = distFromMid / midpoint;\n      const multiplier = ratio;\n      const maxY = multiplier * (height / 5);\n      const scaleMultiplier = 1 - i * (1 / arr.length);\n\n      const iy = Animated.interpolateNode(ry, {\n        inputRange: [-0.5, 0, 0.5],\n        outputRange: [-maxY, i * 5, maxY],\n      });\n\n      const xOffset = width / 4;\n      const ix = multiply(\n        abs(add(multiply(ry, cos(ratio), -xOffset), multiply(ry, xOffset))),\n        -1\n      );\n\n      const rotateZ = Animated.interpolateNode(ry, {\n        inputRange: [0, 1],\n        outputRange: [0, (multiplier * Math.PI) / 2],\n      });\n\n      const scale = Animated.interpolateNode(ry, {\n        inputRange: [-0.5, 0, 0.5],\n        outputRange: [1, 1 + scaleMultiplier * 0.1, 1],\n      });\n\n      const colorIndex = i;\n      return {\n        color: `rgba(${colorIndex * colorMultiplier}, ${Math.abs(\n          128 - colorIndex * colorMultiplier\n        )}, ${255 - colorIndex * colorMultiplier}, 0.9)`,\n        scale,\n        zIndex: -i,\n        translateY: iy,\n        translateX: ix,\n        size,\n        index: colorIndex,\n        gestureState,\n        rotateZ,\n        touchScale: new Value(0),\n        clock: new Clock(),\n        state: {\n          position: new Value(0),\n          finished: new Value(0),\n          time: new Value(0),\n          frameTime: new Value(0),\n        },\n        config: {\n          toValue: new Value(1),\n          duration: 250,\n          easing: Easing.inOut(Easing.ease),\n        },\n      };\n    });\n  }\n\n  renderCard = (\n    {\n      color,\n      scale,\n      translateY,\n      translateX,\n      zIndex,\n      size,\n      rotateZ,\n      gestureState,\n      index,\n      clock,\n      state,\n      config,\n    },\n    i\n  ) => {\n    const runClock = block([\n      cond(clockRunning(clock), [\n        timing(clock, state, config),\n        cond(state.finished, [\n          stopClock(clock),\n          set(state.position, 0),\n          set(state.frameTime, 0),\n          set(state.time, 0),\n          set(state.finished, 0),\n        ]),\n      ]),\n      state.position,\n    ]);\n\n    const ic = Animated.interpolateNode(runClock, {\n      inputRange: [0, 0.5, 1],\n      outputRange: [0, 0.1, 0],\n    });\n\n    const scaleXY = add(scale, ic);\n\n    return (\n      <Animated.View\n        key={`card-${i}`}\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          width: size,\n          height: size / 2,\n          backgroundColor: color,\n          borderRadius: 10,\n          zIndex,\n          opacity: 0.8,\n          transform: [\n            { translateY },\n            { translateX },\n            { scaleX: scaleXY },\n            { scaleY: scaleXY },\n            { rotateZ: Animated.concat(rotateZ, \"rad\") },\n          ],\n        }}>\n        <Animated.View\n          style={{\n            flex: 1,\n            width: size,\n            alignItems: 'flex-end',\n            justifyContent: 'flex-end',\n            padding: 10,\n          }}>\n          <Text\n            style={{\n              color: 'seashell',\n              fontSize: 30,\n              fontWeight: 'bold',\n            }}>\n            {}\n          </Text>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  velocity = new Value(0);\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          width: '100%',\n          padding: 30,\n          overflow: 'hidden',\n          backgroundColor: 'seashell',\n          borderRadius: this.props.width,\n        }}>\n        <Animated.View\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          {this.cards.map(this.renderCard)}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nexport default Deck;\n","import * as React from 'react'\nimport { Dimensions, View, StyleSheet, Text } from 'react-native'\nimport Animated from 'react-native-reanimated'\nimport BackButton from '../components/BackButton'\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport MenuTitle from './MenuTitle'\nconst {\n  onChange,\n  debug,\n  and,\n  not,\n  set,\n  neq,\n  cond,\n  eq,\n  or,\n  add,\n  multiply,\n  greaterThan,\n  lessThan,\n  floor,\n  spring,\n  timing,\n  divide,\n  block,\n  round,\n  startClock,\n  stopClock,\n  clockRunning,\n  sub,\n  defined,\n  Value,\n  Clock,\n  event,\n  sin,\n  modulo,\n  abs,\n  cos,\n  max,\n  min,\n} = Animated;\n\n\n\nclass GridPreview extends React.Component {\n\n  constructor({ height, width, clock }) {\n\n    super()\n\n    const cardsPerRow = 8\n    const engageDist = width / 8\n\n    const numCards = Math.pow(cardsPerRow, 2)\n    const cardSize = width / Math.sqrt(numCards)\n    const influenceDist = width / 2\n    const padding = cardSize / 30\n    const gravity = Math.PI / 2\n\n    this.pan = new Value(0)\n    this.gestureState = new Value(State.UNDETERMINED),\n      this.translationX = new Value(0)\n    this.translationY = new Value(0)\n    this.screenX = new Value(0)\n    this.screenY = new Value(0)\n    this.clock = new Clock()\n\n    this.panRatio = Animated.interpolateNode(this.pan, {\n      inputRange: [0, engageDist],\n      outputRange: [0, 1],\n      extrapolate: Animated.Extrapolate.CLAMP,\n    })\n\n\n    this.cards = [...Array(numCards)].fill(0).map((d, i, arr) => {\n\n      // console.log(`[${row}, ${col}]`)\n      const colorMultiplier = 255 / (arr.length - 1)\n      const color = `rgba(${i * colorMultiplier}, ${Math.abs(128 - i * colorMultiplier)}, ${255 - (i * colorMultiplier)}, 0.9)`\n\n      return {\n        size: cardSize,\n        padding,\n        color,\n        rotateX: \"0deg\",\n        rotateY: \"0deg\",\n        scale: 1\n      }\n    })\n  }\n\n  renderCard = ({ color, rotateX, rotateY, scale, size, padding }, index) => {\n    return (\n      <Animated.View\n        key={`grid-card-${index}`}\n\n        style={{\n          width: size,\n          height: size,\n          padding,\n        }}>\n        <Animated.View\n          style={{\n            flex: 1,\n            backgroundColor: color,\n            borderRadius: size / 10,\n            transform: [\n              {rotateX},\n              {rotateY},\n              {scaleX: scale},\n              {scaleY: scale},\n            ]\n          }}\n        >\n          <Text style={{ color: 'white', fontWeight: 'bold', fontSize: 14 }}>{}</Text>\n        </Animated.View>\n\n      </Animated.View>\n    )\n  }\n\n  render() {\n    const { width } = this.props\n    return (\n      <View style={{\n        flex: 1,\n        backgroundColor: 'seashell',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        borderRadius: width,\n        overflow: 'hidden',\n\n      }}>\n        <Animated.View style={{\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          width: width,\n        }}>\n          {this.cards.map(this.renderCard)}\n        </Animated.View>\n      </View>\n    )\n  }\n}\n\nexport default GridPreview","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\n\nconst {\n  cond,\n  add,\n  multiply,\n  greaterThan,\n  divide,\n  block,\n  round,\n  startClock,\n  stopClock,\n  clockRunning,\n  sub,\n  defined,\n  Value,\n  Clock,\n  event,\n  sin,\n  modulo,\n  abs,\n  cos,\n  color,\n  min,\n  max,\n  debug,\n  call,\n} = Animated;\n\nconst numCards = 7;\nconst rampDist = 100;\n\nclass Book extends React.Component {\n  constructor(props) {\n    super(props);\n    const { width: screenWidth, height: screenHeight } = props;\n    const width = screenWidth * 0.4;\n    const height = width * 2;\n    this.perspective = new Value(850);\n    this.rawTrans = new Value(0);\n\n    this.prevTrans = new Value(width);\n    this.gestureState = new Value(State.UNDETERMINED);\n\n    this.transX = multiply(this.rawTrans, this.panPct);\n\n    this.cumulativeTrans = width\n    const panRange = width * 2;\n    const cardPanWidth = panRange / numCards;\n    this.currentIndex = divide(this.cumulativeTrans, cardPanWidth);\n\n    this.panIndex = new Value(0);\n    this.cards = [...Array(numCards)].fill(0).map((d, index, arr) => {\n      const colorMultiplier = 255 / arr.length;\n      // const color = `rgba(${index * colorMultiplier}, ${Math.abs(128 - index * colorMultiplier)}, ${255 - (index * colorMultiplier)}, 0.9)`\n\n      const rotateY = Animated.interpolateNode(width / cardPanWidth, {\n        inputRange: [index - 1.25, index, index + 1.25],\n        outputRange: [0, Math.PI / 2, Math.PI],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      });\n\n      const zIndex = Animated.interpolateNode(this.currentIndex, {\n        inputRange: [index - 1, index, index + 1],\n        outputRange: [-999 - index, 999, -999 + index],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      });\n\n      const colorIndex = cond(\n        greaterThan(index, this.currentIndex),\n        index,\n        index + 1\n      );\n\n      const c = multiply(colorIndex, colorMultiplier);\n      const r = round(c);\n      const g = round(abs(sub(128, c)));\n      const b = round(sub(255, c));\n      const cardColor = color(r, g, b);\n\n      return {\n        color: cardColor,\n        width,\n        height,\n        rotateY,\n        zIndex,\n      };\n    });\n  }\n\n  renderCard = (\n    { color, width, height, rotateY, translateX, translateY, zIndex },\n    index\n  ) => {\n    return (\n      <Animated.View\n        key={`book-card-${index}`}\n        style={{\n          position: 'absolute',\n          width: width * 2,\n          height,\n          zIndex: round(zIndex),\n          transform: [{ scaleX: 0.8 }, { scaleY: 0.8 }],\n        }}>\n        <Animated.View\n          style={{\n            width: width * 2,\n            height,\n            transform: [\n              { perspective: this.perspective },\n              {\n                rotateY: Animated.concat(rotateY, 'rad'),\n              },\n            ],\n          }}>\n          <Animated.View\n            style={{\n              opacity: 0.85,\n              borderTopLeftRadius: 10,\n              borderBottomLeftRadius: 10,\n              backgroundColor: color,\n              width: width,\n              height,\n            }}>\n            <Text\n              style={{ color: 'seashell', fontSize: 24, fontWeight: 'bold' }}>\n              {}\n            </Text>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  render() {\n    const { width } = this.props;\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: 'seashell',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: width,\n          overflow: 'hidden',\n        }}>\n        <Animated.View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n          }}>\n          <Animated.View\n            style={{\n              ...StyleSheet.absoluteFillObject,\n              alignItems: 'center',\n              justifyContent: 'center',\n              transform: [\n                { perspective: this.perspective },\n                { rotateX: Math.PI / 12 + 'deg' },\n              ],\n            }}>\n            {this.cards.map(this.renderCard)}\n          </Animated.View>\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nexport default Book;\n","\nimport React, { Component } from 'react';\nimport { Dimensions, Image, Text, View, StyleSheet, TouchableOpacity, StatusBar, Platform } from 'react-native';\nimport Animated, { EasingNode as Easing } from 'react-native-reanimated';\nimport { PanGestureHandler, State, TapGestureHandler } from 'react-native-gesture-handler';\nimport MenuTitle from '../components/MenuTitle'\n\n\n\nlet {\n  add,\n  multiply,\n  sub,\n  Value,\n  Clock,\n  round,\n  abs,\n  color,\n} = Animated;\n\n\nclass Dot extends Component {\n\n  constructor(props) {\n    super(props);\n    const { width, height } = props\n\n\n    const dropZoneRadius = width / 4\n    const translateX = width / 2 - dropZoneRadius / 2\n    const translateY = height / 2 - dropZoneRadius / 2\n\n    this.dropZoneRadius = dropZoneRadius\n    this.translateX = translateX\n    this.translateY = translateY\n\n    const dotSize = width / 5\n    this.dotSize = dotSize\n\n    const numDots = 7\n    const ringScales = {\n      disabled: 0,\n      in: 2,\n      out: 15,\n    }\n\n    this.dropZoneRotate = 0\n\n    this.scaleConfig = {\n      easing: Easing.linear,\n      toValue: Math.PI * 2,\n      duration: new Value(1000),\n    }\n\n    this.scaleVal = new Value(0.05)\n\n    this.dropZoneScale = 1\n\n    this.dots = [...Array(numDots)].map((d, index, arr) => {\n      const colorMultiplier = 255 / (arr.length - 1)\n\n      const clock = new Clock();\n\n      const dragX = new Value(0);\n      const dragY = new Value(0);\n      const ratio = index / arr.length\n\n      const startX = Math.sin(ratio * Math.PI * 2) * dropZoneRadius * 1.15\n      const startY = Math.cos(ratio * Math.PI * 2) * dropZoneRadius * 1.15\n      \n      const prevX = new Value(0);\n      const prevY = new Value(0);\n\n      const dotScaleState = {\n        finished: new Value(0),\n        velocity: new Value(0),\n        position: new Value(0.001),\n        time: new Value(0),\n      };\n\n      const dotScaleConfig = {\n        damping: 22,\n        mass: 1,\n        stiffness: 550,\n        overshootClamping: false,\n        restSpeedThreshold: 0.01,\n        restDisplacementThreshold: 0.01,\n        toValue: new Value(1),\n      };\n\n      const c = multiply(index, colorMultiplier)\n      const r = round(c)\n      const g = round(abs(sub(128, c)))\n      const b = round(sub(255, c))\n      const dotColor = color(r, g, b)\n\n      const x = {\n        start: startX,\n        prev: prevX,\n        drag: dragX,\n        translate: startX,\n      }\n\n      const y = {\n        start: startY,\n        prev: prevY,\n        drag: dragY,\n        translate: startY,\n      }\n      const intersects = false\n      \n      const endClock = new Clock\n      const endDisabled = 0.01\n      const endState = {\n        disabled: endDisabled,\n        position: new Value(endDisabled),\n        finished: new Value(0),\n        time: new Value(0),\n        frameTime: new Value(0),\n      }\n   \n      // Ring\n      // Ring animation\n      const ringR = new Value(0)\n      const ringG = new Value(0)\n      const ringB = new Value(0)\n      const ringA = new Value(0)\n\n      const ringClock = new Clock()\n      const ringState = {\n        position: new Value(0.001),\n        time: new Value(0),\n        finished: new Value(0),\n        velocity: new Value(0),\n      }\n      const ringConfig = {\n        damping: 22,\n        mass: 1,\n        stiffness: 55,\n        overshootClamping: false,\n        restSpeedThreshold: 0.001,\n        restDisplacementThreshold: 0.001,\n        toValue: new Value(ringScales.in),\n      }\n\n      const ringScale = 0\n\n      const ringColor = color(ringR, ringG, ringB, ringA)\n      const ringOpacity = 0\n\n      const ring = {\n        clock: ringClock,\n        state: ringState,\n        config: ringConfig,\n        scale: sub(add(this.dropZoneScale, ringScale), 1),\n        r: ringR,\n        g: ringG,\n        b: ringB,\n        a: ringA,\n        color: ringColor,\n        rgb: {\n          r: ringR,\n          g: ringG,\n          b: ringB,\n          a: ringA,\n        },\n        opacity: ringOpacity\n      }\n\n\n      const scale = 1\n\n      return {\n        gestureState: new Value(State.UNDETERMINED),\n        zIndex: new Value(999),\n        intersects,\n        x,\n        y,\n        scale: {\n          clock: clock,\n          value: scale,\n          state: dotScaleState,\n          config: dotScaleConfig,\n        },\n        clock,\n        endClock,\n        endState,\n        color: dotColor,\n        rgb: {r, g, b},\n        ring,\n      }\n    })\n  }\n\n  renderDot = ({ \n    x,\n    y,\n    color,\n    scale, \n    zIndex,\n  }, i) => {\n\n    return (\n\n\n        <Animated.View\n        key={`dot-${i}`}\n          style={{\n            flex: 1,\n            position: 'absolute',\n            width: this.dotSize,\n            height: this.dotSize,\n            zIndex,\n            transform: [\n              {translateX: x.translate},\n              {translateY: y.translate},\n            ]\n          }}\n        >\n          <Animated.View\n            style={{\n              position: 'absolute',\n              opacity: 0.85,\n              width: this.dotSize,\n              height: this.dotSize,\n              borderRadius: this.dotSize / 2,\n              backgroundColor: color,\n              transform: [\n                {scaleX: 1},\n                {scaleY: 1},\n              ]\n            }}\n          />\n \n        </Animated.View>\n    )\n  }\n\n  render() {\n    const { width, height } = this.props\n    return (\n      <Animated.View \n      style={{\n          flex: 1,\n          backgroundColor: 'seashell',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: width,\n          overflow: 'hidden',\n      }}>\n        <Animated.View style={{\n          ...StyleSheet.absoluteFillObject,\n        }}>\n          <Animated.View style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n        {this.dots.map(this.renderDot)}\n        </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    )\n  }\n}\n\nexport default Dot\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'seashell',\n    overflow: 'hidden',\n  },\n});","import * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\n\ntype Props = {\n  color?: string;\n  text: string;\n};\nclass MenuTitle extends React.Component<Props> {\n  render() {\n    return (\n      <View\n        style={{\n          ...StyleSheet.absoluteFillObject,\n          zIndex: 9999,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Text\n          style={{\n            fontSize: 24,\n            fontWeight: 'bold',\n            color: this.props.color || 'seashell',\n          }}>\n          {this.props.text}\n        </Text>\n      </View>\n    );\n  }\n}\n\nexport default MenuTitle;\n","import React, { Component } from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Platform,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { NavigationScreenProp } from '@react-navigation/stack';\n\nimport StackPreview from '../components/StackPreview';\nimport CarouselPreview from '../components/CarouselPreview';\nimport FlipPreview from '../components/FlipPreview';\nimport DeckPreview from '../components/DeckPreview';\nimport GridPreview from '../components/GridPreview';\nimport BookPreview from '../components/BookPreview';\nimport DotPreview from '../components/DotPreview';\n\nconst { width, height } = Dimensions.get('window');\nimport Animated from 'react-native-reanimated';\nimport MenuTitle from '../components/MenuTitle';\nconst { Clock, Value } = Animated;\n\nconst screenSize = Math.min(width, height);\n\n// Original colors\n// const colors = ['rgb(42.5, 85.5, 212.5)', 'rgb(127.5, 0.5, 127.5)']\n// const [start, end] = colors\n\n// Opacity modified colors\nconst colors = ['#5f7ddb', '#7f007f'];\nconst [start, end] = colors;\n\nconst screens = [\n  {\n    title: 'Deck',\n    screen: 'Deck',\n    Preview: DeckPreview,\n  },\n  {\n    title: 'Stack',\n    screen: 'Stack',\n    Preview: StackPreview,\n  },\n  {\n    title: 'Carousel',\n    screen: 'Carousel',\n    Preview: CarouselPreview,\n  },\n  {\n    title: 'Grid',\n    screen: 'Grid',\n    Preview: GridPreview,\n  },\n  {\n    title: 'Book',\n    screen: 'Book',\n    Preview: BookPreview,\n  },\n  {\n    title: 'Dots',\n    screen: 'Dots',\n    titleColor: '#999',\n    Preview: DotPreview,\n  },\n  {\n    title: 'Flip',\n    screen: 'Flip',\n    Preview: FlipPreview,\n  },\n];\n\ntype Props = {\n  navigation: NavigationScreenProp<any>;\n};\n\nclass Menu extends Component<Props> {\n  clock = new Clock();\n  focused = new Value(0);\n  focusListener;\n\n  componentDidMount() {\n    this.focusListener = this.props.navigation.addListener('didFocus', () => {\n      // this.focused.setValue(1)\n    });\n  }\n\n  renderOption = ({ title, screen, Preview, titleColor }) => (\n    <View\n      key={`menu-option-${title}`}\n      style={{\n        margin: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: screenSize / 2,\n        height: screenSize / 2,\n        overflow: 'hidden',\n        borderRadius: screenSize / 2,\n        borderColor: '#ddd',\n        borderWidth: 4,\n      }}>\n      <Preview\n        title={''}\n        focused={this.focused}\n        clock={this.clock}\n        width={screenSize / 2}\n        height={screenSize / 2}\n      />\n      <View\n        style={{\n          ...StyleSheet.absoluteFillObject,\n        }}>\n        <LinearGradient\n          style={{ flex: 0.5, opacity: 0.15 }}\n          colors={['black', 'transparent']}\n        />\n        <View style={{ flex: 0.25 }} />\n        <LinearGradient\n          style={{ flex: 0.25, opacity: 0.1 }}\n          colors={['transparent', 'black']}\n        />\n      </View>\n      <TouchableOpacity\n        style={{\n          ...StyleSheet.absoluteFillObject,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'rgba(0,0,0, .1)',\n        }}\n        onPress={() => {\n          this.focused.setValue(0);\n          this.props.navigation.navigate(screen);\n        }}>\n        <MenuTitle\n          text={title.toUpperCase()}\n          color={titleColor || 'seashell'}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n\n  renderBackground = () => (\n    <View\n      style={{\n        ...StyleSheet.absoluteFillObject,\n      }}>\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: start,\n        }}\n      />\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: end,\n        }}\n      />\n    </View>\n  );\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: 'seashell',\n        }}>\n        {Platform.OS === 'ios' && this.renderBackground()}\n        <ScrollView showsVerticalScrollIndicator={false}>\n          <LinearGradient\n            style={{\n              flex: 1,\n              paddingTop: 40,\n              paddingBottom: 50,\n              width: '100%',\n              alignItems: 'center',\n            }}\n            colors={[start, end]}>\n            {screens.map(this.renderOption)}\n          </LinearGradient>\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Menu;\n","import * as React from 'react'\nimport { TouchableOpacity, Text, View } from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\ntype Props = {\n  color?: string,\n}\n\nconst BackButton = ({ color }: Props) => {\n  const navigation = useNavigation()\n  const insets = useSafeAreaInsets()\n  return (\n      <View \n        style={{ position: 'absolute', marginTop: insets.top + 16 }} \n        >\n          <TouchableOpacity \n            style={{ padding: 20 }}\n            onPress={() => {\n              navigation.goBack(null)\n            }}   \n          >\n            <Text \n              style={{ \n                fontSize: 30, \n                fontWeight: 'bold', \n                color: color || '#ddd' \n              }}\n            >\n            ←\n            </Text>\n          </TouchableOpacity>\n      </View>\n  )\n}\n\nexport default BackButton\n","import Animated from 'react-native-reanimated'\nconst {\n  proc,\n  spring,\n  Value,\n} = Animated\n\nconst betterSpring = proc(\n  (\n    finished: Animated.Value<number>,\n    velocity: Animated.Value<number>,\n    position: Animated.Value<number>,\n    time: Animated.Value<number>,\n    prevPosition: Animated.Value<number>,\n    toValue: Animated.Value<number>,\n    damping: Animated.Value<number>,\n    mass: Animated.Value<number>,\n    stiffness: Animated.Value<number>,\n    overshootClamping: boolean | undefined,\n    restSpeedThreshold: Animated.Value<number>,\n    restDisplacementThreshold: Animated.Value<number>,\n    clock: Animated.Clock\n  ) =>\n    spring(\n      clock,\n      {\n        finished,\n        velocity,\n        position,\n        time,\n        // @ts-ignore -- https://github.com/software-mansion/react-native-reanimated/blob/master/src/animations/spring.js#L177\n        prevPosition\n      },\n      {\n        toValue,\n        damping,\n        mass,\n        stiffness,\n        overshootClamping,\n        restDisplacementThreshold,\n        restSpeedThreshold\n      }\n    )\n);\n\nexport default function springFill(\n  clock: Animated.Clock,\n  state: Animated.SpringState,\n  config: Animated.SpringConfig\n) {\n  return betterSpring(\n    state.finished,\n    state.velocity,\n    state.position,\n    state.time,\n    new Value(0),\n    //@ts-ignore\n    config.toValue,\n    config.damping,\n    config.mass,\n    config.stiffness,\n    //@ts-ignore\n    config.overshootClamping,\n    config.restSpeedThreshold,\n    config.restDisplacementThreshold,\n    clock\n  );\n}\n","import Animated, { EasingNode as Easing } from 'react-native-reanimated'\nconst {\n  proc,\n  timing,\n  Value,\n} = Animated\n\nconst betterTimingInOut = proc(\n  (\n    finished: Animated.Value<number>,\n    frameTime: Animated.Value<number>,\n    position: Animated.Value<number>,\n    time: Animated.Value<number>,\n    prevPosition: Animated.Value<number>,\n    toValue: Animated.Value<number>,\n    duration: Animated.Value<number>,\n    clock: Animated.Clock\n  ) =>\n    timing(\n      clock,\n      {\n        finished,\n        frameTime,\n        position,\n        time,\n        // @ts-ignore -- https://github.com/software-mansion/react-native-reanimated/blob/master/src/animations/spring.js#L177\n        prevPosition\n      },\n      {\n        toValue,\n        easing: Easing.inOut(Easing.ease),\n        duration,\n      }\n    )\n);\n\nconst betterTimingLinear = proc(\n  (\n    finished: Animated.Value<number>,\n    frameTime: Animated.Value<number>,\n    position: Animated.Value<number>,\n    time: Animated.Value<number>,\n    prevPosition: Animated.Value<number>,\n    toValue: Animated.Value<number>,\n    duration: Animated.Value<number>,\n    clock: Animated.Clock\n  ) =>\n    timing(\n      clock,\n      {\n        finished,\n        frameTime,\n        position,\n        time,\n        // @ts-ignore -- https://github.com/software-mansion/react-native-reanimated/blob/master/src/animations/spring.js#L177\n        prevPosition\n      },\n      {\n        toValue,\n        easing: Easing.linear,\n        duration,\n      }\n    )\n);\n\nfunction timingFill(\n  clock: Animated.Clock,\n  state: Animated.TimingState,\n  config: Animated.TimingConfig,\n  easing: \"inOut\" | \"linear\"\n) {\n\n  const timingFn = easing === \"inOut\" ? betterTimingInOut : betterTimingLinear\n  \n  return timingFn(\n    state.finished,\n    state.frameTime,\n    state.position,\n    state.time,\n    new Value(0),\n    //@ts-ignore\n    config.toValue,\n    config.duration,\n    clock\n  );\n}\n\n\n\nexport default {\n  inOut: (clock: Animated.Clock, state: Animated.TimingState, config: Animated.TimingConfig) => timingFill(clock, state, config, \"inOut\"),\n  linear: (clock: Animated.Clock, state: Animated.TimingState, config: Animated.TimingConfig) => timingFill(clock, state, config, \"linear\"),\n}\n","import Animated from 'react-native-reanimated'\nimport { State } from 'react-native-gesture-handler'\n\nconst {\n  proc,\n  block,\n  set,\n  cond,\n  eq,\n  and,\n  greaterThan,\n  lessThan,\n  divide,\n  add,\n  neq,\n  multiply,\n  or,\n  sin,\n  sub,\n  not,\n} = Animated\n\nconst reset4 = proc((v1, v2, v3, v4) => block([\n  set(v1, 0),\n  set(v2, 0),\n  set(v3, 0),\n  set(v4, 0),\n]))\n\nconst onPanStateChange = proc((\n  panGestureState,\n  newState,\n  onDotActive,\n  onDotInactive,\n  dotActive,\n) => block([\n  cond(\n    and(\n      eq(panGestureState, State.ACTIVE),\n      neq(newState, State.ACTIVE),\n      dotActive,\n    ), onDotInactive),\n  cond(\n    and(\n      eq(newState, State.ACTIVE),\n      neq(panGestureState, State.ACTIVE),\n      not(dotActive),\n    ), onDotActive,\n  ),\n  set(panGestureState, newState)\n]))\n\nconst onTapStateChange = proc((\n  currentState,\n  newState,\n  dragX,\n  dragY,\n  translationX,\n  translationY,\n  onDotActive,\n  onDotInactive,\n  dotActive,\n) => block([\n  cond(\n    and(\n      neq(currentState, State.BEGAN),\n      eq(newState, State.BEGAN),\n    ), [\n    set(dragX, translationX),\n    set(dragY, translationY),\n    cond(not(dotActive), onDotActive)\n  ]\n  ),\n  cond(\n    and(\n      neq(currentState, State.END),\n      eq(newState, State.END),\n      dotActive,\n    ), onDotInactive,\n  ),\n  set(currentState, newState),\n]))\n\nconst intersects = proc((\n  centerX,\n  centerY,\n  xl,\n  xr,\n  yt,\n  yb,\n) => cond(\n  and(\n    greaterThan(centerX, xl),\n    lessThan(centerX, xr),\n    greaterThan(centerY, yt),\n    lessThan(centerY, yb),\n  ), 1, 0))\n\nconst getCenter = proc((\n  translate,\n  radius,\n) => add(translate, divide(radius, 2)))\n\nconst setActiveDotVals = proc((\n  ringR,\n  ringG,\n  ringB,\n  ringA,\n  rgbR,\n  rgbG,\n  rgbB,\n  placeholderR,\n  placeholderG,\n  placeholderB,\n  placeholderA,\n  zIndex,\n  toValue,\n) => block([\n  set(ringR, rgbR),\n  set(ringG, rgbG),\n  set(ringB, rgbB),\n  set(ringA, 0), // Hide ring spring back to center\n  set(placeholderR, rgbR),\n  set(placeholderG, rgbG),\n  set(placeholderB, rgbB),\n  set(placeholderA, 0),\n  set(zIndex, 9999),\n  set(toValue, 1),\n]))\n\n\nconst resetRing = proc((\n  position,\n  disabled,\n  finished,\n  velocity,\n  time,\n) => block([\n  set(position, disabled),\n  set(finished, 0),\n  set(velocity, 0),\n  set(time, 0),\n]))\n\nconst getScale = proc((\n  clockRunning,\n  endPos,\n  endDisabled,\n  dotPos,\n  additionalScale,\n) => cond(clockRunning,\n  endPos, [\n  cond(neq(endPos, endDisabled), set(endPos, endDisabled)),\n  add(multiply(dotPos, additionalScale), 1)\n]\n))\n\nconst getTranslate = proc((start, pos, drag) => add(start, multiply(pos, drag)))\n\nconst onDotActive = proc((\n  dotActive,\n  ringR,\n  ringG,\n  ringB,\n  ringA,\n  rgbR,\n  rgbG,\n  rgbB,\n  placeholderR,\n  placeholderG,\n  placeholderB,\n  placeholderA,\n  zIndex,\n  toValue,\n  ringClockRunning,\n  stopRingClock,\n  startScaleClock,\n  ringPos,\n  ringFin,\n  ringVel,\n  ringTime,\n  ringScaleDisabled,\n) => cond(not(dotActive), [\n  set(dotActive, 1),\n  setActiveDotVals(\n    ringR,\n    ringG,\n    ringB,\n    ringA,\n    rgbR,\n    rgbG,\n    rgbB,\n    placeholderR,\n    placeholderG,\n    placeholderB,\n    placeholderA,\n    zIndex,\n    toValue,\n  ),\n  startScaleClock,\n  cond(\n    or(\n      ringClockRunning,\n      neq(ringPos, ringScaleDisabled),\n    ), [\n    stopRingClock,\n    resetRing(\n      ringPos,\n      ringScaleDisabled,\n      ringFin,\n      ringVel,\n      ringTime,\n    ),\n  ])\n]))\n\nconst onPanGestureEvent = proc((\n  panGestureState,\n  dragX,\n  dragY,\n  translationX,\n  translationY,\n  placeholderX,\n  placeholderY,\n  translateX,\n  translateY,\n) => block([\n  cond(eq(panGestureState, State.ACTIVE), [\n    set(dragX, translationX),\n    set(dragY, translationY),\n    set(placeholderX, translateX),\n    set(placeholderY, translateY),\n  ])\n]))\n\nconst getDropZoneScale = proc((pos) => add(1, multiply(0.05, sin(pos))))\nconst getRingOpacity = proc((pos, disabled, out) => cond(\n  and(\n    greaterThan(pos, add(disabled, .05)),\n    lessThan(pos, sub(out, .05)),\n  ), 0.85, 0)\n)\n\nconst onDotInactive = proc((\n  dotActive,\n  intersects,\n  placeholderA,\n  endPos,\n  endDisabled,\n  scaleToValue,\n  ringToValue,\n  ringOut,\n  ringDisabled,\n  zIndex,\n  startEndClock,\n  startScaleClock,\n  startRingClock,\n) => cond(dotActive, [\n  cond(intersects,\n    block([\n      set(placeholderA, 1),\n      set(endPos, endDisabled),\n      startEndClock,\n    ]),\n    set(placeholderA, 0)\n  ),\n  set(scaleToValue, 0),\n  startScaleClock,\n  set(ringToValue, cond(intersects, ringOut, ringDisabled)),\n  startRingClock,\n  set(zIndex, 999),\n  set(dotActive, 0),\n]))\n\nconst reset3 = proc((v1, v2, v3) => block([\n  set(v1, 0),\n  set(v2, 0),\n  set(v3, 0),\n]))\n\nexport default {\n  reset3,\n  reset4,\n  onTapStateChange,\n  onPanStateChange,\n  intersects,\n  getCenter,\n  setActiveDotVals,\n  resetRing,\n  getScale,\n  onDotActive,\n  onDotInactive,\n  getTranslate,\n  onPanGestureEvent,\n  getDropZoneScale,\n  getRingOpacity,\n}","import React, { Component } from 'react';\nimport { Dimensions, StyleSheet, SafeAreaView , Text} from 'react-native';\nimport Animated, {\n  defined,\n  EasingNode as Easing,\n  and,\n  not,\n  set,\n  neq,\n  cond,\n  add,\n  multiply,\n  block,\n  startClock,\n  stopClock,\n  clockRunning,\n  sub,\n  event,\n  round,\n  abs,\n  call,\n  color,\n  Value,\n  Clock,\n  max,\n} from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  State,\n  TapGestureHandler,\n  LongPressGestureHandler,\n} from 'react-native-gesture-handler';\n\nimport BackButton from '../components/BackButton';\nimport spring from '../procs/springFill';\nimport timingFill from '../procs/timingFill';\nimport procs from '../procs/dots';\n\nconst { linear: timing } = timingFill;\nconst { width, height } = Dimensions.get('window');\n\nconst dropZoneRadius = width / 3;\nconst translateX = width / 2 - dropZoneRadius / 2;\nconst translateY = height / 2 - dropZoneRadius / 2;\n\nconst dotSize = width / 5;\n\nconst additionalScale = 0.5;\nconst numDots = 7;\nconst colorMultiplier = 255 / (numDots - 1);\n\nconst ringScales = {\n  disabled: 0.01,\n  in: 2,\n  out: 15,\n};\n\nconst dotCenterX = width / 2 - dotSize / 2;\nconst dotCenterY = height / 2 - dotSize / 2;\nconst xl = width / 2 - dropZoneRadius / 2;\nconst xr = xl + dropZoneRadius;\nconst yt = height / 2 - dropZoneRadius / 2;\nconst yb = yt + dropZoneRadius;\nconst dotRadius = dotSize * (1 + additionalScale);\n\nclass Dots extends Component {\n  constructor(props) {\n    super(props);\n    this.dropZoneClock = new Clock();\n    this.rotClock = new Clock();\n\n    this.rotState = {\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0),\n    finished: new Value(0),\n  };\n  this.rotConfig = {\n    easing: Easing.linear,\n    toValue: Math.PI * 2,\n    duration: 20000,\n  };\n  this.scaleState = {\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0),\n    finished: new Value(0),\n  };\n  this.scaleConfig = {\n    easing: Easing.linear,\n    toValue: Math.PI * 2,\n    duration: new Value(1000),\n  };\n\n  this.dropZoneScale = procs.getDropZoneScale(this.scaleState.position);\n\n  this.dots = [...Array(numDots)].map((d, index, arr) => {\n    const ratio = index / arr.length;\n    const startPos = {\n      x: dotCenterX + Math.sin(ratio * Math.PI * 2) * dropZoneRadius,\n      y: dotCenterY + Math.cos(ratio * Math.PI * 2) * dropZoneRadius,\n    };\n\n    const clock = new Clock();\n    const dragX = new Value(0);\n    const dragY = new Value(0);\n    const startX = new Value(startPos.x);\n    const startY = new Value(startPos.y);\n\n    const dotScaleState = {\n      finished: new Value(0),\n      velocity: new Value(0),\n      position: new Value(0.001),\n      time: new Value(0),\n    };\n\n    const dotScaleConfig = {\n      damping: 22,\n      mass: 1,\n      stiffness: 550,\n      overshootClamping: false,\n      restSpeedThreshold: 0.01,\n      restDisplacementThreshold: 0.01,\n      toValue: new Value(1),\n    };\n\n    const c = multiply(index, colorMultiplier);\n    const r = round(c);\n    const g = round(abs(sub(128, c)));\n    const b = round(sub(255, c));\n    const dotColor = color(r, g, b);\n\n    const x = {\n      start: startX,\n      drag: dragX,\n      translate: procs.getTranslate(startX, dotScaleState.position, dragX),\n    };\n\n    const y = {\n      start: startY,\n      drag: dragY,\n      translate: procs.getTranslate(startY, dotScaleState.position, dragY),\n    };\n\n    const dotCenter = {\n      x: procs.getCenter(x.translate, dotRadius),\n      y: procs.getCenter(y.translate, dotRadius),\n    };\n\n    const intersects = procs.intersects(\n      dotCenter.x,\n      dotCenter.y,\n      xl,\n      xr,\n      yt,\n      yb\n    );\n\n    const endClock = new Clock();\n    const endDisabled = 0.01;\n    const endState = {\n      disabled: endDisabled,\n      position: new Value(endDisabled),\n      finished: new Value(0),\n      time: new Value(0),\n      frameTime: new Value(0),\n    };\n    const endConfig = {\n      easing: Easing.linear,\n      duration: 1000,\n      toValue: 1,\n    };\n    // Ring\n    // Ring animation\n    const ringR = new Value(0);\n    const ringG = new Value(0);\n    const ringB = new Value(0);\n    const ringA = new Value(0);\n\n    const ringClock = new Clock();\n    const ringState = {\n      position: new Value(0.001),\n      time: new Value(0),\n      finished: new Value(0),\n      velocity: new Value(0),\n    };\n    const ringConfig = {\n      damping: 22,\n      mass: 1,\n      stiffness: 55,\n      overshootClamping: false,\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n      toValue: new Value(ringScales.in),\n    };\n\n    const ringColor = color(ringR, ringG, ringB, ringA);\n    const ringOpacity = procs.getRingOpacity(\n      ringState.position,\n      ringScales.disabled,\n      ringScales.out\n    );\n\n    const ring = {\n      clock: ringClock,\n      state: ringState,\n      config: ringConfig,\n      scale: sub(add(this.dropZoneScale, ringState.position), 1),\n      r: ringR,\n      g: ringG,\n      b: ringB,\n      a: ringA,\n      color: ringColor,\n      rgb: {\n        r: ringR,\n        g: ringG,\n        b: ringB,\n        a: ringA,\n      },\n      opacity: ringOpacity,\n    };\n\n    // Placeholder\n    const placeholderR = new Value(0);\n    const placeholderG = new Value(0);\n    const placeholderB = new Value(0);\n    const placeholderA = new Value(0);\n\n    const placeholder = {\n      x: new Value(startPos.x),\n      y: new Value(startPos.y),\n      r: placeholderR,\n      g: placeholderG,\n      b: placeholderB,\n      a: placeholderA,\n      color: color(placeholderR, placeholderG, placeholderB, placeholderA),\n      scale: new Value(0.01),\n    };\n\n    const endClockRunning = cond(defined(endClock), clockRunning(endClock));\n    const startEndClock = cond(defined(endClock), startClock(endClock));\n    const stopEndClock = cond(defined(endClock), stopClock(endClock));\n\n    const scaleVal = procs.getScale(\n      endClockRunning,\n      endState.position,\n      endState.disabled,\n      dotScaleState.position,\n      additionalScale\n    );\n\n    const scale = {\n      clock: clock,\n      value: scaleVal,\n      state: dotScaleState,\n      config: dotScaleConfig,\n    };\n\n    const mainClockRunning = cond(defined(clock), clockRunning(clock));\n    const stopMainClock = cond(defined(clock), stopClock(clock));\n\n    const ringClockRunning = cond(\n      defined(ring.clock),\n      clockRunning(ring.clock)\n    );\n    const startRingClock = cond(defined(ring.clock), startClock(ring.clock));\n    const stopRingClock = cond(defined(ring.clock), stopClock(ring.clock));\n\n    const startScaleClock = cond(defined(scale.clock), startClock(scale.clock));\n\n    const dotActive = new Value(0);\n\n    const panGestureState = new Value(State.UNDETERMINED);\n    const longPressGestureState = new Value(State.UNDETERMINED);\n    const tapGestureState = new Value(State.UNDETERMINED);\n    const zIndex = new Value(999);\n\n    const rgb = { r, g, b };\n\n    const onDotInactive = procs.onDotInactive(\n      dotActive,\n      intersects,\n      placeholder.a,\n      endState.position,\n      endState.disabled,\n      scale.config.toValue,\n      ring.config.toValue,\n      ringScales.out,\n      ringScales.disabled,\n      zIndex,\n      startEndClock,\n      startScaleClock,\n      startRingClock\n    );\n\n    const onDotActive = procs.onDotActive(\n      dotActive,\n      ring.r,\n      ring.g,\n      ring.b,\n      ring.a,\n      rgb.r,\n      rgb.g,\n      rgb.b,\n      placeholder.r,\n      placeholder.g,\n      placeholder.b,\n      placeholder.a,\n      zIndex,\n      scale.config.toValue,\n      ringClockRunning,\n      stopRingClock,\n      startScaleClock,\n      ring.state.position,\n      ring.state.finished,\n      ring.state.velocity,\n      ring.state.time,\n      ringScales.disabled\n    );\n\n    const onPanGestureEvent = event([\n      {\n        nativeEvent: ({ translationX, translationY }) =>\n          procs.onPanGestureEvent(\n            panGestureState,\n            x.drag,\n            y.drag,\n            translationX,\n            translationY,\n            placeholder.x,\n            placeholder.y,\n            x.translate,\n            y.translate\n          ),\n      },\n    ]);\n\n    const onPanStateChange = event([\n      {\n        nativeEvent: ({ state }) =>\n          procs.onPanStateChange(\n            panGestureState,\n            state,\n            onDotActive,\n            onDotInactive,\n            dotActive\n          ),\n      },\n    ]);\n\n    const onLongPressStateChange = event([\n      {\n        nativeEvent: ({ state, translationX, translationY }) =>\n          procs.onTapStateChange(\n            longPressGestureState,\n            state,\n            x.drag,\n            y.drag,\n            translationX,\n            translationY,\n            onDotActive,\n            onDotInactive,\n            dotActive\n          ),\n      },\n    ]);\n\n    const onTapStateChange = event([\n      {\n        nativeEvent: ({ state, translationX, translationY }) =>\n          procs.onTapStateChange(\n            tapGestureState,\n            state,\n            x.drag,\n            y.drag,\n            translationX,\n            translationY,\n            onDotActive,\n            onDotInactive,\n            dotActive\n          ),\n      },\n    ]);\n\n    const outerStyle = {\n      flex: 1,\n      position: 'absolute',\n      width: dotSize,\n      height: dotSize,\n      zIndex,\n      transform: [{ translateX: x.translate }, { translateY: y.translate }],\n    };\n\n    const innerStyle = {\n      position: 'absolute',\n      opacity: 0.85,\n      width: dotSize,\n      height: dotSize,\n      borderRadius: dotSize / 2,\n      backgroundColor: dotColor,\n      transform: [{ scaleX: scale.value }, { scaleY: scale.value }],\n    };\n\n    const placeholderStyle = {\n      position: 'absolute',\n      opacity: 0.85,\n      width: dotSize,\n      height: dotSize,\n      borderRadius: dotSize / 2,\n      backgroundColor: placeholder.color,\n      zIndex: 999,\n      transform: [\n        { translateX: placeholder.x },\n        { translateY: placeholder.y },\n        { scaleX: placeholder.scale },\n        { scaleY: placeholder.scale },\n      ],\n    };\n\n    const ringStyle = {\n      position: 'absolute',\n      opacity: ring.opacity,\n      width: dropZoneRadius,\n      height: dropZoneRadius,\n      borderRadius: dropZoneRadius,\n      borderColor: ring.color,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 20,\n      left: translateX,\n      top: translateY,\n      transform: [\n        { scaleX: ring.scale },\n        { scaleY: ring.scale },\n      ],\n    };\n\n    const runCode = () =>\n      block([\n        cond(\n          and(\n            defined(clock),\n            defined(ring.clock),\n            defined(scale.clock),\n            defined(endClock)\n          ),\n          [\n            // Dot entering center\n            cond(\n              and(\n                intersects,\n                not(ringClockRunning),\n                neq(ring.state.position, ringScales.in)\n              ),\n              [\n                set(ring.a, 1),\n                set(ring.state.position, ringScales.disabled),\n                set(ring.config.toValue, ringScales.in),\n                startRingClock,\n              ]\n            ),\n            // Dot leaving center\n            cond(\n              and(\n                not(intersects),\n                not(ringClockRunning),\n                neq(ring.state.position, ringScales.disabled)\n              ),\n              [set(ring.config.toValue, ringScales.disabled), startRingClock]\n            ),\n            cond(mainClockRunning, [\n              spring(clock, dotScaleState, dotScaleConfig),\n              cond(dotScaleState.finished, [\n                stopMainClock,\n                procs.reset3(\n                  dotScaleState.finished,\n                  dotScaleState.velocity,\n                  dotScaleState.time\n                ),\n              ]),\n            ]),\n            cond(endClockRunning, [\n              timing(endClock, endState, endConfig),\n              set(\n                placeholder.scale,\n                max(\n                  0.01,\n                  multiply(\n                    add(1, additionalScale),\n                    add(1, multiply(-1, endState.position))\n                  )\n                )\n              ),\n              cond(endState.finished, [\n                stopEndClock,\n                procs.reset4(\n                  placeholder.a,\n                  endState.finished,\n                  endState.time,\n                  endState.frameTime\n                ),\n              ]),\n            ]),\n            cond(ringClockRunning, [\n              spring(ringClock, ringState, ringConfig),\n              cond(ringState.finished, [\n                stopRingClock,\n                procs.reset3(\n                  ringState.time,\n                  ringState.velocity,\n                  ringState.finished\n                ),\n              ]),\n            ]),\n          ]\n        ),\n      ]);\n\n    return {\n      panRef: React.createRef(),\n      onPanGestureEvent,\n      onPanStateChange,\n      onLongPressStateChange,\n      onTapStateChange,\n      placeholder,\n      outerStyle,\n      innerStyle,\n      ringStyle,\n      placeholderStyle,\n      runCode,\n    };\n  });\n  }\n\n  \n\n  renderDot = (\n    {\n      panRef,\n      onPanGestureEvent,\n      onPanStateChange,\n      onLongPressStateChange,\n      onTapStateChange,\n      runCode,\n      outerStyle,\n      innerStyle,\n    },\n    i\n  ) => {\n    return (\n      <Animated.View key={`dot-${i}`} style={outerStyle}>\n        <PanGestureHandler\n          ref={panRef}\n          onGestureEvent={onPanGestureEvent}\n          onHandlerStateChange={onPanStateChange}>\n          <Animated.View style={styles.flex}>\n            <LongPressGestureHandler\n              simultaneousHandlers={panRef}\n              maxDist={0}\n              onHandlerStateChange={onLongPressStateChange}>\n              <Animated.View style={styles.flex}>\n                <TapGestureHandler onHandlerStateChange={onTapStateChange}>\n                  <Animated.View style={innerStyle} />\n                </TapGestureHandler>\n              </Animated.View>\n            </LongPressGestureHandler>\n          </Animated.View>\n        </PanGestureHandler>\n        <Animated.Code>{runCode}</Animated.Code>\n      </Animated.View>\n    );\n  };\n\n  renderPlaceholder = ({ placeholderStyle }, i) => {\n    return (\n      <Animated.View\n        key={`placeholder-${i}`}\n        pointerEvents=\"none\"\n        style={placeholderStyle}\n      />\n    );\n  };\n\n  renderRing = ({ ringStyle }, i) => {\n    return (\n      <Animated.View key={`ring-${i}`} pointerEvents=\"none\" style={ringStyle} />\n    );\n  };\n\n  renderDropZone = () => {\n    return (\n      <Animated.View\n        pointerEvents=\"none\"\n        style={{\n          position: 'absolute',\n          width: dropZoneRadius,\n          height: dropZoneRadius,\n          borderRadius: dropZoneRadius,\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderWidth: 5,\n          borderStyle: 'dotted',\n          backgroundColor: 'seashell',\n          borderColor: '#ccc',\n          left: translateX,\n          top: translateY,\n          transform: [\n            { rotate: Animated.concat(this.rotState.position, \"rad\") },\n            { scaleX: this.dropZoneScale },\n            { scaleY: this.dropZoneScale },\n          ],\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Animated.View style={styles.container}>\n        <SafeAreaView>\n          {this.dots.map(this.renderRing)}\n          {this.dots.map(this.renderPlaceholder)}\n          {this.renderDropZone()}\n          {this.dots.map(this.renderDot)}\n        </SafeAreaView>\n        <BackButton />\n        <Animated.Code>\n          {() =>\n            block([\n              cond(and(defined(this.dropZoneClock), defined(this.rotClock)), [\n                cond(\n                  not(clockRunning(this.dropZoneClock)),\n                  startClock(this.dropZoneClock)\n                ),\n                timing(this.dropZoneClock, this.scaleState, this.scaleConfig),\n                cond(this.scaleState.finished, [\n                  stopClock(this.dropZoneClock),\n                  procs.reset4(\n                    this.scaleState.position,\n                    this.scaleState.time,\n                    this.scaleState.frameTime,\n                    this.scaleState.finished\n                  ),\n                  startClock(this.dropZoneClock),\n                ]),\n                cond(\n                  not(clockRunning(this.rotClock)),\n                  startClock(this.rotClock)\n                ),\n                timing(this.rotClock, this.rotState, this.rotConfig),\n                cond(this.rotState.finished, [\n                  stopClock(this.rotClock),\n                  procs.reset4(\n                    this.rotState.position,\n                    this.rotState.time,\n                    this.rotState.frameTime,\n                    this.rotState.finished\n                  ),\n                  startClock(this.rotClock),\n                ]),\n              ]),\n            ])\n          }\n        </Animated.Code>\n      </Animated.View>\n    );\n  }\n}\n\nexport default Dots;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'seashell',\n    overflow: 'hidden',\n  },\n  flex: {\n    flex: 1,\n  },\n});\n","import React, { Component } from 'react'\nimport { Dimensions, SafeAreaView } from 'react-native'\nimport Animated, { concat } from 'react-native-reanimated';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\n\nconst { width, height } = Dimensions.get('window');\n\nconst {\n  debug,\n  set,\n  cond,\n  eq,\n  or,\n  multiply,\n  spring,\n  block,\n  startClock,\n  stopClock,\n  clockRunning,\n  Value,\n  Clock,\n  event,\n} = Animated;\n\nimport BackButton from '../components/BackButton'\n\nclass Card extends Component {\n\n  translationX: Animated.Value<number>\n  translationY: Animated.Value<number>\n  perspective: Animated.Value<number>\n  gestureState: Animated.Value<State>\n  rotateX: Animated.Node<string>\n  rotateY: Animated.Node<string>\n  springState: Animated.SpringState\n  springConfig: Animated.SpringConfig\n  clock: Animated.Clock\n  _x: Animated.Node<number>\n  _y: Animated.Node<number>\n  _lastX: Animated.Value<number>\n  _lastY: Animated.Value<number>\n\n  constructor() {\n    super()\n    this.translationX = new Value(0)\n    this.translationY = new Value(0)\n    this.gestureState = new Value(State.UNDETERMINED)\n\n\n    this.rotateX = Animated.concat(\n      Animated.interpolateNode(this.translationY, {\n        inputRange: [-height / 2, 0, height / 2],\n        outputRange: [180, 0, -180],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      }),\n      'deg',\n    )\n\n    this.rotateY = Animated.concat(\n      Animated.interpolateNode(this.translationX, {\n        inputRange: [-width, 0, width],\n        outputRange: [-180, 0, 180],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      }),\n      'deg',\n    )\n\n    this.perspective = new Value(850)\n\n    this.springState = {\n      finished: new Value(0),\n      velocity: new Value(0),\n      position: new Value(1),\n      time: new Value(0),\n    };\n\n    this.springConfig = {\n      damping: 8,\n      mass: 1,\n      stiffness: 50.296,\n      overshootClamping: false,\n      toValue: 0,\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    this.clock = new Clock()\n\n    this._lastX = new Value(0)\n    this._lastY = new Value(0)\n\n    const hasMoved = [\n      cond(or(this.translationX, this.translationY), 1, 0)\n    ]\n\n    const isActive = [\n      cond(eq(this.gestureState, State.ACTIVE), 1, 0)\n    ]\n\n    const startClockIfStopped = [\n      cond(clockRunning(this.clock), 0, [\n        set(this._lastY, this.translationY),\n        set(this._lastX, this.translationX),\n        startClock(this.clock)\n      ]\n      )\n    ]\n\n    const reset = [\n      set(this._lastY, 0),\n      set(this._lastX, 0),\n      set(this.translationX, 0),\n      set(this.translationY, 0),\n      set(this.springState.position, 1),\n      set(this.springState.finished, 0),\n      set(this.springState.time, 0),\n    ]\n\n    const stopClockIfFinished = [\n      cond(this.springState.finished, [\n        reset,\n        stopClock(this.clock),\n      ])\n    ]\n\n    const stopClockIfStarted = [\n      cond(clockRunning(this.clock), [\n        stopClock(this.clock),\n        set(this.springState.position, 1),\n        set(this.springState.finished, 0),\n        set(this.springState.time, 0),\n      ])\n    ]\n\n\n    this._x = block([\n      cond(isActive, [\n        stopClockIfStarted,\n        this.rotateX,\n      ],\n        cond(hasMoved, [\n          startClockIfStopped,\n          spring(this.clock, this.springState, this.springConfig),\n          stopClockIfFinished,\n          set(this.translationY, multiply(this._lastY, this.springState.position)),\n          this.rotateX,\n        ], this.rotateX))\n    ])\n\n\n    this._y = block([\n      cond(isActive, this.rotateY,\n        cond(hasMoved, [\n          set(this.translationX, multiply(this._lastX, this.springState.position)),\n          this.rotateY,\n        ], this.rotateY)\n      )\n    ])\n  }\n\n\n\n\n\n  render() {\n    return (\n      <PanGestureHandler\n        onGestureEvent={event([{\n          nativeEvent: ({ translationX: x, translationY: y }) => block([\n            set(this.translationX, x),\n            set(this.translationY, y),\n          ])\n        }\n        ])}\n        onHandlerStateChange={event([{ nativeEvent: { state: this.gestureState } }])}\n      >\n\n        <Animated.View style={{ flex: 1, backgroundColor: 'seashell', alignItems: 'center', justifyContent: 'center' }}>\n          <SafeAreaView style={{ flex: 1 }}>\n            <Animated.View\n              style={{\n                opacity: 0.9,\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: width / 2,\n                backgroundColor: 'tomato',\n                height: height / 2,\n                borderRadius: 5,\n                zIndex: 100,\n                transform: [\n                  { perspective: this.perspective },\n                  { rotateX: concat(this._x, \"deg\") },\n                  { rotateY: concat(this._y, \"deg\") },\n                ]\n              }}\n            />\n            <Animated.View\n              style={{\n                opacity: 0.9,\n                position: 'absolute',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: width / 2,\n                backgroundColor: 'dodgerblue',\n                height: height / 2,\n                zIndex: this.translationX,\n                borderRadius: 5,\n                transform: [\n                  { translateY: 20 },\n                  { perspective: this.perspective },\n                  { rotateX: concat(this._x, \"deg\") },\n                  { rotateY: concat(this._y, \"deg\") },\n                  { scale: 1.5 },\n                ]\n              }}\n            />\n\n          </SafeAreaView>\n          <BackButton />\n        </Animated.View>\n      </PanGestureHandler>\n    )\n  }\n}\n\nexport default Card","import React, { Component } from \"react\";\nimport { View, Dimensions, Text } from \"react-native\";\nimport Animated, { concat } from \"react-native-reanimated\";\nimport {\n  PanGestureHandler,\n  State,\n  TapGestureHandler,\n} from \"react-native-gesture-handler\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst {\n  debug,\n  and,\n  set,\n  neq,\n  cond,\n  eq,\n  add,\n  multiply,\n  divide,\n  spring,\n  block,\n  floor,\n  startClock,\n  stopClock,\n  clockRunning,\n  sub,\n  Value,\n  Clock,\n  event,\n  color,\n  abs,\n  modulo,\n  round,\n  call,\n  onChange,\n} = Animated;\n\nimport BackButton from \"../components/BackButton\";\n\nconst size = width / 2;\nconst numCards = 7;\nconst maxIndex = numCards - 1;\nconst colorMultiplier = 255 / maxIndex;\n\nclass Card extends Component {\n  indexY: Animated.Node<number>;\n  color: Animated.Node<number>;\n  _x: Animated.Node<number>;\n  _y: Animated.Node<number>;\n  runClock: Animated.Node<number>;\n  scale: Animated.Node<number>;\n  shadowScale: Animated.Node<number>;\n\n  startIndexY: Animated.Value<number> = new Value(0);\n  translationX: Animated.Value<number> = new Value(0);\n  translationY: Animated.Value<number> = new Value(0);\n  gestureState: Animated.Value<State> = new Value(State.UNDETERMINED);\n  tapState: Animated.Value<State> = new Value(State.UNDETERMINED);\n  perspective: Animated.Value<number> = new Value(850);\n  springState: Animated.SpringState = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n  };\n  springConfig: Animated.SpringConfig = {\n    damping: 8,\n    mass: 1,\n    stiffness: 50.296,\n    overshootClamping: false,\n    toValue: new Value(1),\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n  };\n  tapSpr: Animated.SpringState = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n  };\n  tapCfg: Animated.SpringConfig = {\n    damping: 12,\n    mass: 1,\n    stiffness: 100,\n    overshootClamping: false,\n    toValue: new Value(1),\n    restSpeedThreshold: 0.01,\n    restDisplacementThreshold: 0.01,\n  };\n  clock: Animated.Clock = new Clock();\n  tapClock: Animated.Clock = new Clock();\n\n  constructor(props) {\n    super(props);\n    const prevX = new Value(0);\n    const prevY = new Value(0);\n    const px = new Value(0);\n    const py = new Value(0);\n    const diffX = new Value(0);\n    const diffY = new Value(0);\n\n    const cumulativeY = add(prevY, this.translationY);\n    const cumulativeX = add(prevX, this.translationX);\n\n    const sizeInterpolatedY = Animated.interpolateNode(cumulativeY, {\n      inputRange: [-size, 0, size],\n      outputRange: [180, 0, -180],\n    });\n\n    const sizeInterpolatedX = Animated.interpolateNode(cumulativeX, {\n      inputRange: [-size, 0, size],\n      outputRange: [-180, 0, 180],\n    });\n\n    const indexX = floor(divide(add(sizeInterpolatedX, 90), 180));\n    const indexY = floor(divide(add(sizeInterpolatedY, 90), 180));\n    this.indexY = indexY;\n    const index = add(indexX, indexY);\n\n    const targetX = multiply(size, indexX);\n    const targetY = multiply(size, indexY, -1);\n\n    const modX = sub(modulo(add(sizeInterpolatedX, 90), 180), 90);\n    const modY = sub(modulo(add(sizeInterpolatedY, 90), 180), 90);\n\n    const isInverted = modulo(sub(this.startIndexY, indexY), 2);\n\n    const rotateX = Animated.concat(modY, \"deg\");\n    const rotateY = Animated.concat(\n      cond(isInverted, multiply(modX, -1), modX),\n      \"deg\"\n    );\n\n    const colorIndex = sub(maxIndex, modulo(add(index, maxIndex), numCards));\n\n    const c = multiply(colorIndex, colorMultiplier);\n    const r = round(c);\n    const g = round(abs(sub(128, c)));\n    const b = round(sub(255, c));\n    this.color = color(r, g, b);\n\n    const isActive = eq(this.gestureState, State.ACTIVE);\n    const diff = new Value(0);\n    const rawX = new Value(0);\n\n    const reset = [\n      set(diff, 0),\n      set(rawX, 0),\n      set(this.translationX, 0),\n      set(this.translationY, 0),\n      set(this.springState.position, 0),\n      set(this.springState.finished, 0),\n      set(this.springState.time, 0),\n    ];\n\n    const stopClockIfFinished = [\n      cond(this.springState.finished, [reset, stopClock(this.clock)]),\n    ];\n\n    const stopClockIfStarted = [\n      cond(clockRunning(this.clock), [\n        stopClock(this.clock),\n        set(this.springState.position, 0),\n        set(this.springState.finished, 0),\n        set(this.springState.time, 0),\n      ]),\n    ];\n\n    const startClockIfStopped = [\n      cond(clockRunning(this.clock), 0, [\n        set(prevY, add(prevY, this.translationY)),\n        set(prevX, add(prevX, this.translationX)),\n\n        // NOTE: Order seems to matter for Android -- resetting translation\n        // at the end of this block breaks android.\n        set(this.translationX, 0),\n        set(diff, 0),\n        set(rawX, 0),\n        set(this.translationY, 0),\n\n        set(px, prevX),\n        set(py, prevY),\n\n        set(diffX, sub(targetX, prevX)),\n        set(diffY, sub(targetY, prevY)),\n\n        startClock(this.clock),\n      ]),\n    ];\n\n    this._x = block([\n      cond(\n        isActive,\n        [stopClockIfStarted],\n        [\n          startClockIfStopped,\n          cond(clockRunning(this.clock), [\n            spring(this.clock, this.springState, this.springConfig),\n            set(prevX, add(px, multiply(diffX, this.springState.position))),\n            set(prevY, add(py, multiply(diffY, this.springState.position))),\n          ]),\n          stopClockIfFinished,\n        ]\n      ),\n      rotateX,\n    ]);\n\n    this._y = rotateY;\n\n    this.runClock = [\n      cond(clockRunning(this.tapClock), [\n        spring(this.tapClock, this.tapSpr, this.tapCfg),\n        cond(this.tapSpr.finished, [\n          stopClock(this.tapClock),\n          set(this.tapSpr.position, 0),\n          set(this.tapSpr.time, 0),\n          set(this.tapSpr.velocity, 0),\n          set(this.tapSpr.finished, 0),\n        ]),\n      ]),\n      this.tapSpr.position,\n    ];\n\n    this.scale = Animated.interpolateNode(this.runClock, {\n      inputRange: [0, 0.5, 1],\n      outputRange: [1, 1.1, 1],\n    });\n\n    this.shadowScale = Animated.interpolateNode(this.runClock, {\n      inputRange: [0, 0.5, 1],\n      outputRange: [1, 0.95, 1],\n    });\n\n    this.onPanGestureEvent = event([\n      {\n        nativeEvent: ({ translationX: x, translationY: y }) =>\n          block([\n            cond(eq(this.gestureState, State.ACTIVE), [\n              set(diff, sub(rawX, x)),\n              set(rawX, x),\n              set(\n                this.translationX,\n                cond(\n                  isInverted,\n                  add(this.translationX, diff),\n                  sub(this.translationX, diff)\n                )\n              ),\n              set(this.translationY, y),\n            ]),\n          ]),\n      },\n    ]);\n  }\n\n  onPanStateChange = event([\n    {\n      nativeEvent: ({ state }) =>\n        block([\n          cond(\n            and(neq(this.gestureState, State.ACTIVE), eq(state, State.ACTIVE)),\n            [set(this.startIndexY, this.indexY)]\n          ),\n          set(this.gestureState, state),\n        ]),\n    },\n  ]);\n\n  onTapStateChange = event([\n    {\n      nativeEvent: ({ state }) =>\n        block([\n          cond(and(neq(this.tapState, State.END), eq(state, State.END)), [\n            startClock(this.tapClock),\n          ]),\n          set(this.tapState, state),\n        ]),\n    },\n  ]);\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: \"seashell\",\n        }}\n      >\n        <PanGestureHandler\n          onGestureEvent={this.onPanGestureEvent}\n          onHandlerStateChange={this.onPanStateChange}\n        >\n          <Animated.View\n            style={{\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Animated.View\n              style={{\n                position: \"absolute\",\n                top: height / 2,\n                right: width / 2,\n                width: size * 0.75,\n                height: size * 0.75,\n                backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n                borderRadius: 5,\n                zIndex: -999,\n                transform: [\n                  { perspective: this.perspective },\n                  { rotateY: this._y },\n                  { rotateX: this._x },\n                  { scaleX: this.shadowScale },\n                  { scaleY: this.shadowScale },\n                ],\n              }}\n            />\n            <TapGestureHandler onHandlerStateChange={this.onTapStateChange}>\n              <Animated.View\n                style={{\n                  opacity: 0.8,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  width: size,\n                  height: size,\n                  backgroundColor: this.color,\n                  borderRadius: 5,\n                  transform: [\n                    { perspective: this.perspective },\n                    { rotateY: this._y },\n                    { rotateX: this._x },\n                    { scaleX: this.scale },\n                    { scaleY: this.scale },\n                  ],\n                }}\n              ></Animated.View>\n            </TapGestureHandler>\n          </Animated.View>\n        </PanGestureHandler>\n        <BackButton />\n      </View>\n    );\n  }\n}\n\nexport default Card;\n","import Animated from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\n\nlet {\n  cond,\n  interpolateNode: interpolate,\n  proc,\n  multiply,\n  add,\n  sub,\n  block,\n  set,\n  modulo,\n  divide,\n  lessThan,\n  or,\n  greaterThan,\n  and,\n  not,\n  neq,\n  eq,\n} = Animated;\n\nif (!proc) {\n  proc = (fn) => fn;\n}\n\nconst resetSpring = proc((time, position, finished, velocity) =>\n  block([set(time, 0), set(position, 0), set(finished, 0), set(velocity, 0)])\n);\n\nconst transToIndex = proc((cumulativeTrans, tickHeight, index, numCards) =>\n  modulo(\n    interpolate(cumulativeTrans, {\n      inputRange: [multiply(-1, tickHeight), 0, tickHeight],\n      outputRange: [sub(index, 1), index, add(index, 1)],\n    }),\n    numCards\n  )\n);\n\nexport const indexToTrans = proc((transToIndex, numCards, size) =>\n  sub(\n    interpolate(transToIndex, {\n      inputRange: [0, 0.5, 0.75, 1, numCards],\n      outputRange: [0, size, multiply(size, 1.9), multiply(size, 1.25), 0],\n    }),\n    60\n  )\n);\n\nconst scaleXY = proc((transToIndex, numCards, scale) =>\n  interpolate(transToIndex, {\n    inputRange: [0, 0.25, 0.5, 1, numCards],\n    outputRange: [\n      scale,\n      multiply(scale, 1.2),\n      multiply(scale, 1.24),\n      divide(scale, 2),\n      scale,\n    ],\n    extrapolate: Animated.Extrapolate.CLAMP,\n  })\n);\n\nconst zIndex = proc((transToIndex, numCards) =>\n  interpolate(transToIndex, {\n    inputRange: [0, 0.7, 0.75, 1, numCards],\n    outputRange: [999, 999, 0, 0, 333],\n    extrapolate: Animated.Extrapolate.CLAMP,\n  })\n);\n\n// Go forward or backward to tapped card\n// depending on which requires fewer moves\nconst setDiffIndex = proc(\n  (\n    diffIndex,\n    activeIndex,\n    colorIndex,\n    numCards,\n    diffTrans,\n    tickHeight,\n    toValue,\n    tempOffset\n  ) =>\n    block([\n      set(\n        diffIndex,\n        cond(\n          lessThan(\n            modulo(sub(colorIndex, activeIndex), numCards),\n            modulo(sub(activeIndex, colorIndex), numCards)\n          ),\n          // Go forward\n          modulo(sub(colorIndex, activeIndex), numCards),\n          // Go backwards\n          multiply(modulo(sub(activeIndex, colorIndex), numCards), -1)\n        )\n      ),\n      set(diffTrans, multiply(tickHeight, diffIndex)),\n      set(toValue, diffTrans),\n      set(tempOffset, diffTrans),\n    ])\n);\n\n// if translate amt is greater than tickHeight / 2 or is fling gesture\n// snap to next index, otherwise snap back to current index\nconst setSprConfig = proc(\n  (toValue, velocity, flingThresh, prevTrans, tickHeight, tempOffset) =>\n    set(\n      toValue,\n      cond(\n        or(\n          greaterThan(velocity, flingThresh), // Fling down\n          and(\n            not(lessThan(velocity, multiply(flingThresh, -1))), // Fling up\n            greaterThan(modulo(prevTrans, tickHeight), divide(tickHeight, 2))\n          )\n        ),\n\n        // snap to next index\n        set(tempOffset, sub(tickHeight, modulo(prevTrans, tickHeight))),\n        // snap to current index\n        set(tempOffset, multiply(modulo(prevTrans, tickHeight), -1))\n      )\n    )\n);\n\nconst gestureIsEnded = proc((gestureState, state) =>\n  and(neq(gestureState, State.END), eq(state, State.END))\n);\n\nconst onPanGestureEvent = proc(\n  (gestureState, translationY, y, velocity, velocityY) =>\n    cond(eq(gestureState, State.ACTIVE), [\n      set(translationY, y),\n      set(velocity, velocityY),\n    ])\n);\n\nconst getActiveIndex = proc((cumulativeTrans, tickHeight, numCards) =>\n  interpolate(modulo(cumulativeTrans, multiply(tickHeight, numCards)), {\n    inputRange: [0, tickHeight],\n    outputRange: [0, 1],\n  })\n);\n\nconst setPrevTrans = proc((prevTrans, position) =>\n  set(prevTrans, add(prevTrans, position))\n);\n\nexport default {\n  zIndex,\n  scaleXY,\n  transToIndex,\n  indexToTrans,\n  resetSpring,\n  setDiffIndex,\n  setSprConfig,\n  gestureIsEnded,\n  onPanGestureEvent,\n  getActiveIndex,\n  setPrevTrans,\n};\n","import React, { Component } from 'react';\nimport { View, Dimensions, Platform, SafeAreaView, Text } from 'react-native';\nimport Animated, {\n  and,\n  not,\n  set,\n  neq,\n  cond,\n  eq,\n  add,\n  multiply,\n  block,\n  startClock,\n  stopClock,\n  clockRunning,\n  call,\n  Value,\n  Clock,\n  event,\n  modulo,\n  round,\n  interpolateNode as interpolate,\n  concat,\n} from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  State,\n  TapGestureHandler,\n  PanGestureHandlerGestureEvent,\n  PanGestureHandlerStateChangeEvent,\n  TapGestureHandlerStateChangeEvent,\n} from 'react-native-gesture-handler';\nimport BackButton from '../components/BackButton';\n\nconst { width, height } = Dimensions.get('window');\n\nconst isAndroid = Platform.OS === 'android';\nimport spring from '../procs/springFill';\nimport procs from '../procs/stack';\n\nconst numCards = 7;\nconst tickHeight = height * 0.75;\nconst size = Math.min(width, height) * 0.75;\nconst flingThresh = 500;\nconst iosConfig = {\n  inputRange: [0, 0.5, 1, 2, numCards],\n  outputRange: [60, 0, 80, 70, 60],\n};\n\nconst androidConfig = {\n  inputRange: [0, 0.5, 1, 2, numCards],\n  outputRange: [70, 0, 35, 50, 70],\n};\n\ntype Card = {\n  color: string;\n  rotateX: Animated.Node<string>;\n  zIndex: Animated.Node<number>;\n  scale: Animated.Node<number>;\n  translateY: Animated.Node<number>;\n  size: number;\n  onTapStateChange: (e: TapGestureHandlerStateChangeEvent) => void;\n};\n\nclass CardStack extends Component {\n  sprState: Animated.SpringState = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n  };\n  sprConfig: Animated.SpringConfig = {\n    damping: 20,\n    mass: 0.3,\n    stiffness: 30,\n    overshootClamping: false,\n    toValue: new Value(0),\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n  };\n\n  _mounted: Animated.Value<number> = new Value(1);\n  mainHandler: React.RefObject<PanGestureHandler> = React.createRef();\n  translationY: Animated.Value<number> = new Value(0);\n  prevTrans: Animated.Value<number> = new Value(0);\n  diffIndex = new Value(0);\n  diffTrans = new Value(0);\n  gestureState: Animated.Value<State> = new Value(State.UNDETERMINED);\n  perspective: Animated.Value<number> = new Value(850);\n  auto: Animated.Value<number> = new Value(0);\n  clock: Animated.Clock = new Clock();\n  _tempOffset: Animated.Value<number> = new Value(0);\n  velocity = new Value(0);\n\n  cumulativeTrans: Animated.Node<number> = add(\n    this.prevTrans,\n    this.translationY,\n    this.sprState.position\n  );\n  activeIndex: Animated.Node<number> = procs.getActiveIndex(\n    this.cumulativeTrans,\n    tickHeight,\n    numCards\n  );\n\n  onPanGestureEvent = event([\n    {\n      nativeEvent: ({ translationY: y, velocityY }) =>\n        procs.onPanGestureEvent(\n          this.gestureState,\n          this.translationY,\n          y,\n          this.velocity,\n          velocityY\n        ),\n    },\n  ]);\n\n  onPanStateChange = event([\n    {\n      nativeEvent: ({ state }) =>\n        block([\n          cond(and(eq(state, State.ACTIVE), clockRunning(this.clock)), [\n            stopClock(this.clock),\n            set(this.prevTrans, add(this.prevTrans, this.sprState.position)),\n            procs.resetSpring(\n              this.sprState.time,\n              this.sprState.position,\n              this.sprState.finished,\n              this.sprState.velocity\n            ),\n          ]),\n\n          cond(procs.gestureIsEnded(this.gestureState, state), [\n            set(this.prevTrans, add(this.translationY, this.prevTrans)),\n            procs.setSprConfig(\n              this.sprConfig.toValue,\n              this.velocity,\n              flingThresh,\n              this.prevTrans,\n              tickHeight,\n              this._tempOffset\n            ),\n            startClock(this.clock),\n            set(this.translationY, 0),\n          ]),\n          set(this.gestureState, state),\n        ]),\n    },\n  ]);\n\n  cards: Card[] = [...Array(numCards)].fill(0).map((_, i) => {\n    const colorMultiplier = 255 / (numCards - 1);\n    const index = new Value(i);\n    const gestureState = new Value(State.UNDETERMINED);\n    const scale = new Value(1);\n    const transToIndex = procs.transToIndex(\n      this.cumulativeTrans,\n      tickHeight,\n      index,\n      numCards\n    );\n    const translateY = procs.indexToTrans(transToIndex, numCards, size);\n    const rotateX = concat(\n      interpolate(transToIndex, isAndroid ? androidConfig : iosConfig),\n      'deg'\n    );\n    const scaleXY = procs.scaleXY(transToIndex, numCards, scale);\n    const zIndex = procs.zIndex(transToIndex, numCards);\n    // Somehow the top of the stack ended up as index 0\n    // but the next item down is numCards - 1\n    // for example, indices would go\n    // 0\n    // 4\n    // 3\n    // 2\n    // 1\n    // `colorIndex` compensates for this\n    const maxIndex = numCards - 1;\n    const colorIndex = maxIndex - ((i + maxIndex) % numCards);\n\n    const onTapStateChange = event([\n      {\n        nativeEvent: ({ state }) =>\n          block([\n            cond(procs.gestureIsEnded(gestureState, state), [\n              cond(clockRunning(this.clock), [\n                stopClock(this.clock),\n                procs.setPrevTrans(this.prevTrans, this.sprState.position),\n                procs.resetSpring(\n                  this.sprState.time,\n                  this.sprState.position,\n                  this.sprState.finished,\n                  this.sprState.velocity\n                ),\n              ]),\n              procs.setDiffIndex(\n                this.diffIndex,\n                this.activeIndex,\n                colorIndex,\n                numCards,\n                this.diffTrans,\n                tickHeight,\n                this.sprConfig.toValue,\n                this._tempOffset\n              ),\n              startClock(this.clock),\n            ]),\n            set(gestureState, state),\n          ]),\n      },\n    ]);\n\n    return {\n      color: `rgba(${colorIndex * colorMultiplier}, ${Math.abs(\n        128 - colorIndex * colorMultiplier\n      )}, ${255 - colorIndex * colorMultiplier}, 0.9)`,\n      scale: scaleXY,\n      zIndex: round(zIndex),\n      translateY,\n      size,\n      index: i,\n      rotateX,\n      onTapStateChange,\n    };\n  });\n\n  renderCard = (\n    { color, scale, translateY, zIndex, rotateX, size, onTapStateChange, index },\n    i\n  ) => {\n\n    return (\n      <Animated.View\n        key={`card-${i}`}\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          borderRadius: 10,\n          zIndex,\n          transform: [\n            { perspective: this.perspective },\n            { translateY },\n            { scaleX: scale },\n            { scaleY: scale },\n            { rotateX },\n          ],\n        }}>\n        <TapGestureHandler onHandlerStateChange={onTapStateChange}>\n          <Animated.View style={{ flex: 1, width: size }} />\n        </TapGestureHandler>\n      </Animated.View>\n    );\n  };\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: 'seashell',\n        }}>\n        <SafeAreaView style={{ flex: 1 }}>\n          <PanGestureHandler\n            ref={this.mainHandler}\n            onGestureEvent={this.onPanGestureEvent}\n            onHandlerStateChange={this.onPanStateChange}>\n            <Animated.View\n              style={{\n                flex: 1,\n                marginTop: 50,\n                alignItems: 'center',\n              }}>\n              {this.cards.map(this.renderCard)}\n            </Animated.View>\n          </PanGestureHandler>\n        </SafeAreaView>\n        <BackButton />\n        <Animated.Code>\n          {() =>\n            cond(clockRunning(this.clock), [\n              spring(this.clock, this.sprState, this.sprConfig),\n              cond(this.sprState.finished, [\n                procs.resetSpring(\n                  this.sprState.time,\n                  this.sprState.position,\n                  this.sprState.finished,\n                  this.sprState.velocity\n                ),\n                set(this.prevTrans, add(this._tempOffset, this.prevTrans)),\n                stopClock(this.clock),\n              ]),\n              cond(not(this._mounted), stopClock(this.clock)),\n            ])\n          }\n        </Animated.Code>\n      </View>\n    );\n  }\n}\n\nexport default CardStack;\n","import Animated, {\n  block,\n  set,\n  proc,\n  cond,\n  or,\n  abs,\n  lessThan,\n  eq,\n  diff,\n  interpolateNode as interpolate,\n  multiply,\n  sub,\n  add,\n  modulo,\n  min,\n  sin,\n  divide,\n} from 'react-native-reanimated'\nimport { State } from 'react-native-gesture-handler'\n\nconst reset4 = proc((v1, v2, v3, v4) => block([\n  set(v1, 0),\n  set(v2, 0),\n  set(v3, 0),\n  set(v4, 0),\n]))\n\nconst getDiffSmoothed = proc((\n  tapGestureState,\n  prevDiff,\n  diffAmt,\n) => cond(\n  or(\n    lessThan(abs(diff(diffAmt)), 1),\n    eq(tapGestureState, State.BEGAN),\n  )\n  , [\n    set(prevDiff, diffAmt),\n    diffAmt,\n  ], prevDiff))\n\nconst getTransToIndex = proc((cumulativeTrans, tickWidth, index, len) => modulo(interpolate(cumulativeTrans, {\n  inputRange: [multiply(tickWidth, -1), 0, tickWidth],\n  outputRange: [sub(index, 1), index, add(index, 1)],\n}), len))\n\nconst getRotateX = proc((leanAmt, pos) => multiply(min(0.2, abs(add(leanAmt, pos))), -1))\n\nconst getRotateY = proc((transToIndex, numCards) => interpolate(transToIndex, {\n  inputRange: [0, numCards],\n  outputRange: [0, multiply(Math.PI, 2)],\n}))\n\nconst getScaleXY = proc((rotateY) => add(1,\n  multiply(0.15, sin(add(divide(Math.PI,2), rotateY))),\n))\n\nconst getTranslateX = proc((rotateY, size) => multiply(size, sin(rotateY)))\n\nconst getZIndex = proc((transToIndex, len) => interpolate(transToIndex, {\n  inputRange: [0, divide(len, 2),len],\n  outputRange: [200, 0, 200],\n  extrapolate: Animated.Extrapolate.CLAMP,\n}))\n\nexport default {\n  reset4,\n  getDiffSmoothed,\n  getTransToIndex,\n  getRotateX,\n  getRotateY,\n  getScaleXY,\n  getTranslateX,\n  getZIndex,\n}","import React, { Component, useEffect, useReducer } from 'react';\nimport { View, Dimensions, Platform, StyleSheet } from 'react-native';\nimport Animated, {\n  EasingNode as Easing,\n  onChange,\n  and,\n  not,\n  set,\n  neq,\n  cond,\n  eq,\n  or,\n  add,\n  multiply,\n  greaterThan,\n  timing,\n  block,\n  startClock,\n  stopClock,\n  clockRunning,\n  Value,\n  Clock,\n  event,\n  abs,\n  diff,\n  call,\n  concat,\n  round,\n} from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  State,\n  TapGestureHandler,\n} from 'react-native-gesture-handler';\n\nconst isAndroid = Platform.OS === 'android';\nconst isWeb = Platform.OS === \"web\"\n\nconst { width, height } = Dimensions.get('window');\nimport spring from '../procs/springFill';\nimport procs from '../procs/carousel';\nconst screenSize = Math.min(width, height)\n\nimport BackButton from '../components/BackButton';\n\nconst numCards = 7;\nconst tickWidth = screenSize / 2;\nconst size = screenSize * 0.8;\nconst maxIndex = numCards - 1;\nconst colorMultiplier = 255 / maxIndex;\n\ntype Props = any;\n\nclass Carousel extends Component<Props> {\n  willBlurSub;\n  mainHandler = React.createRef<PanGestureHandler>();\n  tapHandler = React.createRef<TapGestureHandler>();\n  translationX = new Value<number>(0);\n  prevTrans = new Value<number>(0);\n  perspective = new Value<number>(850);\n  panGestureState = new Value(State.UNDETERMINED);\n  tapGestureState = new Value(State.UNDETERMINED);\n  activeCardIndex = new Value<number>(0);\n  clock = new Clock();\n  altClock = new Clock();\n  isWeb = new Value(isWeb ? 1 : 0)\n\n  _prevLeanAmt = new Value<number>(0);\n\n  animState: Animated.TimingState = {\n    finished: new Value(0),\n    position: new Value(0),\n    frameTime: new Value(0),\n    time: new Value(0),\n  };\n  animConfig: Animated.TimingConfig = {\n    toValue: new Value(0),\n    duration: new Value(5000),\n    //@ts-ignore\n    easing: Easing.out(Easing.ease),\n  };\n  altState: Animated.SpringState = {\n    finished: new Value(0),\n    position: new Value(0),\n    velocity: new Value(0),\n    time: new Value(0),\n  };\n  altConfig: Animated.SpringConfig = {\n    damping: 15,\n    mass: 1,\n    stiffness: 150,\n    overshootClamping: false,\n    toValue: new Value<number>(0),\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n  };\n\n  cumulativeTrans = add(\n    this.prevTrans,\n    this.translationX,\n    this.animState.position\n  );\n  diffAmt = diff(abs(this.cumulativeTrans));\n  prevDiff = new Value<number>(0);\n  diffSmoothed = procs.getDiffSmoothed(\n    this.tapGestureState,\n    this.prevDiff,\n    this.diffAmt\n  );\n  leanAmt = multiply(this.diffSmoothed, 0.005);\n  onTapStateChange = event([\n    {\n      nativeEvent: ({ state }) =>\n        block([\n          set(this.tapGestureState, state),\n          onChange(this.tapGestureState, [\n            cond(eq(this.tapGestureState, State.BEGAN), [\n              //@ts-ignore\n              set(this.animConfig.toValue, 0),\n              cond(clockRunning(this.clock), [\n                set(this.altState.position, this._prevLeanAmt),\n                startClock(this.altClock),\n                stopClock(this.clock),\n                set(this.prevTrans, this.cumulativeTrans),\n                procs.reset4(\n                  this.animState.time,\n                  this.animState.position,\n                  this.animState.frameTime,\n                  this.animState.finished\n                ),\n              ]),\n            ]),\n          ]),\n        ]),\n    },\n  ]);\n\n  onPanStateChange = event([\n    {\n      nativeEvent: ({ state }) =>\n        block([\n          set(this.panGestureState, state),\n          onChange(this.panGestureState, [\n            cond(eq(this.panGestureState, State.ACTIVE), [\n              cond(clockRunning(this.clock), [\n                stopClock(this.clock),\n                procs.reset4(\n                  this.animState.time,\n                  this.animState.position,\n                  this.animState.frameTime,\n                  this.animState.finished\n                ),\n              ]),\n            ]),\n\n            cond(eq(this.panGestureState, State.END), [\n              set(this.prevTrans, add(this.translationX, this.prevTrans)),\n              set(this.translationX, 0),\n              cond(clockRunning(this.clock), [\n                stopClock(this.clock),\n                procs.reset4(\n                  this.animState.time,\n                  this.animState.position,\n                  this.animState.frameTime,\n                  this.animState.finished\n                ),\n              ]),\n              cond(greaterThan(abs(this.animConfig.toValue), 0), [\n                //@ts-ignore\n                set(this.animConfig.duration, 5000),\n                procs.reset4(\n                  this.animState.time,\n                  this.animState.position,\n                  this.animState.frameTime,\n                  this.animState.finished\n                ),\n                startClock(this.clock),\n              ]),\n            ]),\n          ]),\n        ]),\n    },\n  ]);\n\n  onPanGestureEvent = event([\n    {\n      nativeEvent: ({ translationX: x, velocityX }) =>\n        block([\n          cond(eq(this.panGestureState, State.ACTIVE), [\n            set(this.translationX, x),\n            //@ts-ignore\n            set(this.animConfig.toValue, velocityX),\n            //@ts-ignore\n            cond(this.isWeb, set(this.animConfig.toValue, multiply(this.animConfig.toValue, 500)))\n          ]),\n        ]),\n    },\n  ]);\n\n  cards = [...Array(numCards)].fill(0).map((_d, i, arr) => {\n    // Somehow the top of the stack ended up as index 0\n    // but the next item down is arr.length - 1\n    // for example, indices would go\n    // 0\n    // 4\n    // 3\n    // 2\n    // 1\n    // `colorIndex` compensates for this\n    const colorIndex = maxIndex - ((i + maxIndex) % arr.length);\n    const index = new Value(i);\n    const cardTransY = new Value(0);\n    const cardGestureState = new Value(0);\n    const cardClock = new Clock();\n    const cardState = {\n      finished: new Value(0),\n      position: new Value(1),\n      velocity: new Value(0),\n      time: new Value(0),\n    };\n\n    const cardConfig = {\n      damping: 15,\n      mass: 1,\n      stiffness: 150,\n      overshootClamping: false,\n      toValue: new Value(0),\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    const transToIndex = procs.getTransToIndex(\n      this.cumulativeTrans,\n      tickWidth,\n      index,\n      arr.length\n    );\n    const rotateX = procs.getRotateX(this.leanAmt, this.altState.position);\n    const rotateY = procs.getRotateY(transToIndex, numCards);\n    const translateX = procs.getTranslateX(rotateY, screenSize / 3);\n    const scaleXY = procs.getScaleXY(rotateY);\n    const zIndex = procs.getZIndex(transToIndex, arr.length);\n    const translateY = 0;\n\n    const onHandlerStateChange = event([\n      {\n        nativeEvent: ({ state }) =>\n          block([\n            cond(\n              and(neq(state, State.ACTIVE), eq(cardGestureState, State.ACTIVE)),\n              [startClock(cardClock)]\n            ),\n            cond(and(eq(state, State.ACTIVE), clockRunning(cardClock)), [\n              stopClock(cardClock),\n              set(cardState.position, 1),\n              procs.reset4(\n                cardState.finished,\n                cardState.time,\n                cardState.velocity,\n                cardTransY\n              ),\n            ]),\n            set(cardGestureState, state),\n          ]),\n      },\n    ]);\n\n    const onGestureEvent = event([\n      {\n        nativeEvent: ({ translationY }) =>\n          block([\n            cond(eq(cardGestureState, State.ACTIVE), [\n              set(cardTransY, translationY),\n            ]),\n          ]),\n      },\n    ]);\n\n    const innerTransform = [\n      { perspective: this.perspective },\n      {\n        translateY: cond(\n          clockRunning(cardClock),\n          [\n            spring(cardClock, cardState, cardConfig),\n            multiply(add(translateY, cardTransY), cardState.position),\n          ],\n          add(translateY, cardTransY)\n        ),\n      },\n      { rotateY: Animated.concat(rotateY, 'rad') },\n      { rotateX: Animated.concat(rotateX, 'rad') },\n    ];\n\n    const outerTransform = [\n      { perspective: this.perspective },\n      { translateX },\n      { scaleX: scaleXY },\n      { scaleY: scaleXY },\n    ];\n\n    const outerStyle = {\n      zIndex: round(zIndex),\n      position: 'absolute',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: size / 4,\n      height: size,\n      transform: outerTransform,\n    };\n\n    const color = `rgba(${colorIndex * colorMultiplier}, ${Math.abs(\n      128 - colorIndex * colorMultiplier\n    )}, ${255 - colorIndex * colorMultiplier}, 0.9)`;\n\n    const innerStyle = {\n      position: 'absolute',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: size / 4,\n      height: size,\n      backgroundColor: color,\n      borderRadius: 10,\n      zIndex: round(zIndex),\n      transform: innerTransform,\n    };\n\n    const runCode = () =>\n      cond(and(clockRunning(cardClock), cardState.finished), [\n        stopClock(cardClock),\n        set(cardState.position, 1),\n        procs.reset4(\n          cardState.finished,\n          cardState.time,\n          cardState.velocity,\n          cardTransY\n        ),\n      ]);\n\n    return {\n      onHandlerStateChange,\n      onGestureEvent,\n      innerTransform,\n      outerTransform,\n      outerStyle,\n      innerStyle,\n      runCode,\n    };\n  });\n\n  componentDidMount() {\n    this.willBlurSub = this.props.navigation.addListener('blur', () => {});\n  }\n\n  componentWillUnmount() {\n    this.willBlurSub?.remove?.();\n  }\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: 'seashell',\n        }}>\n        <PanGestureHandler\n          ref={this.mainHandler}\n          onGestureEvent={this.onPanGestureEvent}\n          onHandlerStateChange={this.onPanStateChange}>\n          <Animated.View style={{ flex: 1, ...StyleSheet.absoluteFillObject }}>\n            <TapGestureHandler\n              ref={this.tapHandler}\n              maxDist={0}\n              simultaneousHandlers={this.mainHandler}\n              onHandlerStateChange={this.onTapStateChange}>\n              <Animated.View\n                style={{\n                  flex: 1,\n                  marginTop: 50,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}>\n                {this.cards.map((c, i) => {\n                  return (\n                    <CarouselCard\n                      {...c}\n                      key={`card-${i}`}\n                      simultaneousHandlers={[this.mainHandler, this.tapHandler]}\n                    />\n                  );\n                })}\n              </Animated.View>\n            </TapGestureHandler>\n          </Animated.View>\n        </PanGestureHandler>\n        <BackButton />\n        <Animated.Code dependencies={[]}>\n          {() =>\n            block([\n              onChange(this.leanAmt, set(this._prevLeanAmt, this.leanAmt)),\n              cond(clockRunning(this.clock), [\n                timing(this.clock, this.animState, this.animConfig),\n                cond(and(this.animState.finished, clockRunning(this.clock)), [\n                  stopClock(this.clock),\n                  set(\n                    this.prevTrans,\n                    add(this.prevTrans, this.animState.position)\n                  ),\n                  procs.reset4(\n                    this.animState.time,\n                    this.animState.position,\n                    this.animState.frameTime,\n                    this.animState.finished\n                  ),\n                ]),\n              ]),\n              cond(clockRunning(this.altClock), [\n                spring(this.altClock, this.altState, this.altConfig),\n                cond(\n                  and(\n                    eq(this.altState.finished, 1),\n                    clockRunning(this.altClock)\n                  ),\n                  [\n                    stopClock(this.altClock),\n                    procs.reset4(\n                      this.altState.time,\n                      this.altState.velocity,\n                      this.altState.finished,\n                      this.altState.position\n                    ),\n                  ]\n                ),\n              ]),\n            ])\n          }\n        </Animated.Code>\n      </View>\n    );\n  }\n}\n\nexport default Carousel;\n\nconst CarouselCard = ({\n  onHandlerStateChange,\n  onGestureEvent,\n  outerStyle,\n  innerStyle,\n  runCode,\n  simultaneousHandlers,\n}) => {\n  // @NOTE: PanGestureHandler should not directly wrap an element that can rotate completely on edge.\n  // this causes values to go to infinity.\n\n  return (\n    <PanGestureHandler\n      simultaneousHandlers={simultaneousHandlers}\n      onGestureEvent={onGestureEvent}\n      onHandlerStateChange={onHandlerStateChange}>\n      <Animated.View style={outerStyle}>\n        <Animated.View style={innerStyle} />\n        <Animated.Code dependencies={[]}>{runCode}</Animated.Code>\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n","import {\n  proc,\n  block,\n  set,\n  multiply,\n  add,\n  cos,\n  abs,\n  cond,\n  greaterThan,\n  divide,\n  and,\n  eq,\n  neq,\n  lessThan,\n} from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\n\nconst resetSpring = proc(\n  (time, position, finished, velocity, toValue, prevTrans) =>\n    block([\n      set(time, 0),\n      set(position, toValue),\n      set(finished, 0),\n      set(velocity, 0),\n      set(prevTrans, toValue),\n    ])\n);\n\nconst getXInput = proc((ry, ratio, xOffset) =>\n  multiply(\n    abs(\n      add(\n        multiply(ry, cos(ratio), multiply(-1, xOffset)),\n        multiply(ry, xOffset)\n      )\n    ),\n    -1\n  )\n);\n\nconst reset4 = proc((v1, v2, v3, v4) =>\n  block([set(v1, 0), set(v2, 0), set(v3, 0), set(v4, 0)])\n);\n\nconst onPanEnd = proc((prevTrans, translationY, position, toValue, height, velocity) =>\n  block([\n    set(position, add(prevTrans, translationY)),\n    set(translationY, 0),\n    set(prevTrans, 0),\n    cond(\n      greaterThan(abs(add(position, velocity)), divide(height, 4)),\n      set(\n        toValue,\n        cond(\n          greaterThan(add(position, velocity), 0),\n          divide(height, 2),\n          multiply(-1, divide(height, 2))\n        )\n      ),\n      set(toValue, 0)\n    ),\n  ])\n);\n\nconst onPanActive = proc(\n  (state, gestureState, cumulativeTrans, width, x, left) =>\n    cond(\n      and(\n        eq(state, State.ACTIVE),\n        neq(gestureState, State.ACTIVE),\n        lessThan(abs(cumulativeTrans), 50)\n      ),\n      set(left, cond(lessThan(x, divide(width, 2)), 1, 0))\n    )\n);\n\nconst getDirectionalVal = proc((left, val) =>\n  cond(left, multiply(val, -1), val)\n);\n\nexport default {\n  resetSpring,\n  getXInput,\n  reset4,\n  onPanActive,\n  onPanEnd,\n  getDirectionalVal,\n};\n","import React, { Component } from \"react\";\nimport { View, Dimensions, SafeAreaView, Platform } from \"react-native\";\nimport Animated, {\n  defined,\n  EasingNode as Easing,\n  and,\n  set,\n  neq,\n  cond,\n  eq,\n  multiply,\n  call,\n  add,\n  block,\n  startClock,\n  stopClock,\n  clockRunning,\n  Value,\n  Clock,\n  concat,\n  event,\n  interpolateNode as interpolate,\n} from \"react-native-reanimated\";\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n  PanGestureHandlerStateChangeEvent,\n  State,\n  TapGestureHandler,\n  TapGestureHandlerStateChangeEvent,\n} from \"react-native-gesture-handler\";\nimport BackButton from \"../components/BackButton\";\nimport spring from \"../procs/springFill\";\nimport timingFill from \"../procs/timingFill\";\nimport procs from \"../procs/deck\";\nconst { width, height } = Dimensions.get(\"window\");\nconst { inOut: timing } = timingFill;\n\nconst numCards = 7;\n\ntype Card = {\n  style: any;\n  size: number;\n  runCode: () => Animated.Node<number>;\n  onHandlerStateChange: (evt: TapGestureHandlerStateChangeEvent) => void;\n};\n\nclass Deck extends Component {\n  mainHandler: React.RefObject<PanGestureHandler>;\n  sprConfig: Animated.SpringConfig;\n  sprState: Animated.SpringState;\n  translationY: Animated.Value<number>;\n  prevTrans: Animated.Value<number>;\n  gestureState: Animated.Value<State>;\n  perspective: Animated.Value<number>;\n  clock: Animated.Clock;\n  left: Animated.Value<number>;\n  velocity: Animated.Value<number>;\n  clockTrans: Animated.Node<number>;\n  cumulativeTrans: Animated.Node<number>;\n  cards: Card[];\n  ry: Animated.Node<number>;\n  onPanStateChange: (evt: PanGestureHandlerStateChangeEvent) => void;\n  onPanGestureEvent: (evt: PanGestureHandlerGestureEvent) => void;\n  isWeb: Animated.Value<number>;\n\n  constructor(props) {\n    super(props);\n    this.mainHandler = React.createRef<PanGestureHandler>();\n    this.translationY = new Value<number>(0);\n    this.prevTrans = new Value<number>(0);\n    this.gestureState = new Value(State.UNDETERMINED);\n    this.perspective = new Value<number>(850);\n    this.clock = new Clock();\n    this.left = new Value<number>(0);\n    this.velocity = new Value<number>(0);\n    this.isWeb = new Value(Platform.OS === \"web\" ? 1 : 0);\n\n    this.sprState = {\n      finished: new Value(0),\n      velocity: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n    };\n    this.sprConfig = {\n      damping: 20,\n      mass: 0.3,\n      stiffness: 70,\n      overshootClamping: false,\n      toValue: new Value(0),\n      restSpeedThreshold: 0.05,\n      restDisplacementThreshold: 0.05,\n    };\n\n    this.clockTrans = cond(clockRunning(this.clock), this.sprState.position, 0);\n    this.cumulativeTrans = add(\n      this.translationY,\n      this.prevTrans,\n      this.clockTrans\n    );\n\n    this.ry = interpolate(this.cumulativeTrans, {\n      inputRange: [0, height],\n      outputRange: [0, 1],\n    });\n\n    this.cards = [...Array(numCards)].fill(0).map((_d, i, arr) => {\n      const clock = new Clock();\n      const config = {\n        toValue: new Value(1),\n        duration: 250,\n        easing: Easing.inOut(Easing.ease),\n      };\n      const state = {\n        position: new Value(0),\n        finished: new Value(0),\n        time: new Value(0),\n        frameTime: new Value(0),\n      };\n\n      const colorIndex = i;\n      const colorMultiplier = 255 / (arr.length - 1);\n      const size = Math.min(width, height) * 0.75;\n      const gestureState = new Value(State.UNDETERMINED);\n      const midpoint = (arr.length - 1) / 2;\n\n      // 0: 10\n      // 1: 5\n      // 2: 0\n      // 3: 5\n      // 4: 10\n      // midpoint: 2\n      //\n\n      const distFromMid = midpoint - i;\n      const ratio = distFromMid / midpoint;\n      const multiplier = ratio;\n      const maxY = multiplier * (height / 5);\n      const scaleMultiplier = 1 - i * (1 / arr.length);\n\n      const iy = interpolate(this.ry, {\n        inputRange: [-0.5, 0, 0.5],\n        outputRange: [-maxY, i * 5, maxY],\n      });\n\n      const xOffset = width / 4;\n      const ix = procs.getXInput(this.ry, ratio, xOffset);\n\n      const rotateZ = interpolate(this.ry, {\n        inputRange: [0, 1],\n        outputRange: [0, (multiplier * Math.PI) / 2],\n      });\n\n      const scale = interpolate(this.ry, {\n        inputRange: [-0.5, 0, 0.5],\n        outputRange: [1, 1 + scaleMultiplier * 0.1, 1],\n      });\n\n      const ic = interpolate(state.position, {\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 0.1, 0],\n      });\n\n      const color = `rgba(${colorIndex * colorMultiplier}, ${Math.abs(\n        128 - colorIndex * colorMultiplier\n      )}, ${255 - colorIndex * colorMultiplier}, 0.9)`;\n      const scaleXY = add(scale, ic);\n\n      const style = {\n        width: size,\n        height: size / 2,\n        justifyContent: \"center\",\n        position: \"absolute\",\n        alignItems: \"center\",\n        backgroundColor: color,\n        borderRadius: 10,\n        zIndex: -i,\n        opacity: 0.8,\n        transform: [\n          { translateY: iy },\n          { translateX: procs.getDirectionalVal(this.left, ix) },\n          {\n            rotateZ: concat(procs.getDirectionalVal(this.left, rotateZ), \"rad\"),\n          },\n          { scaleX: scaleXY },\n          { scaleY: scaleXY },\n        ],\n      };\n\n      const runCode = () =>\n        cond(and(defined(this.clock), clockRunning(clock)), [\n          timing(clock, state, config),\n          cond(state.finished, [\n            stopClock(clock),\n            procs.reset4(\n              state.position,\n              state.frameTime,\n              state.time,\n              state.finished\n            ),\n          ]),\n        ]);\n\n      const onHandlerStateChange = event([\n        {\n          nativeEvent: ({ state }) =>\n            block([\n              cond(\n                and(\n                  defined(this.clock),\n                  eq(state, State.END),\n                  neq(gestureState, State.END)\n                ),\n                [startClock(clock)]\n              ),\n              set(gestureState, state),\n            ]),\n        },\n      ]);\n\n      return {\n        size,\n        style,\n        runCode,\n        onHandlerStateChange,\n      };\n    });\n\n    this.onPanGestureEvent = event([\n      {\n        nativeEvent: ({ translationY: y, velocityY }) =>\n          block([\n            cond(eq(this.gestureState, State.ACTIVE), [\n              set(this.translationY, y),\n              set(this.velocity, velocityY),\n            ]),\n          ]),\n      },\n    ]);\n\n    this.onPanStateChange = event([\n      {\n        nativeEvent: ({ state, x }) =>\n          block([\n            procs.onPanActive(\n              state,\n              this.gestureState,\n              this.cumulativeTrans,\n              width,\n              x,\n              this.left\n            ),\n            cond(\n              and(\n                defined(this.clock),\n                eq(this.gestureState, State.ACTIVE),\n                neq(state, State.ACTIVE)\n              ),\n              [\n                procs.onPanEnd(\n                  this.prevTrans,\n                  this.translationY,\n                  this.sprState.position,\n                  this.sprConfig.toValue,\n                  height,\n                  // Velocity on web is much lower\n                  multiply(this.velocity, cond(this.isWeb, 100, 0.1))\n                ),\n                startClock(this.clock),\n              ]\n            ),\n            cond(\n              and(\n                defined(this.clock),\n                eq(state, State.ACTIVE),\n                clockRunning(this.clock)\n              ),\n              [\n                stopClock(this.clock),\n                set(\n                  this.prevTrans,\n                  add(this.prevTrans, this.sprState.position)\n                ),\n                procs.reset4(\n                  this.sprState.position,\n                  this.sprState.time,\n                  this.sprState.velocity,\n                  this.sprState.finished\n                ),\n              ]\n            ),\n\n            set(this.gestureState, state),\n          ]),\n      },\n    ]);\n  }\n\n  renderCard = ({ size, style, runCode, onHandlerStateChange }, i) => {\n    return (\n      <Animated.View key={`card-${i}`} style={style}>\n        <TapGestureHandler onHandlerStateChange={onHandlerStateChange}>\n          <Animated.View\n            style={{\n              flex: 1,\n              width: size,\n              alignItems: \"flex-end\",\n              justifyContent: \"flex-end\",\n              padding: 10,\n            }}\n          />\n        </TapGestureHandler>\n        <Animated.Code>{runCode}</Animated.Code>\n      </Animated.View>\n    );\n  };\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: \"seashell\",\n        }}\n      >\n        <SafeAreaView style={{ flex: 1 }}>\n          <PanGestureHandler\n            ref={this.mainHandler}\n            onGestureEvent={this.onPanGestureEvent}\n            onHandlerStateChange={this.onPanStateChange}\n          >\n            <Animated.View\n              style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {this.cards.map(this.renderCard)}\n            </Animated.View>\n          </PanGestureHandler>\n        </SafeAreaView>\n        <BackButton />\n        <Animated.Code>\n          {() =>\n            cond(and(defined(this.clock), clockRunning(this.clock)), [\n              spring(this.clock, this.sprState, this.sprConfig),\n              cond(this.sprState.finished, [\n                procs.resetSpring(\n                  this.sprState.time,\n                  this.sprState.position,\n                  this.sprState.finished,\n                  this.sprState.velocity,\n                  this.sprConfig.toValue,\n                  this.prevTrans\n                ),\n                stopClock(this.clock),\n              ]),\n            ])\n          }\n        </Animated.Code>\n      </View>\n    );\n  }\n}\n\nexport default Deck;\n","import { Dimensions } from 'react-native'\nimport Animated from 'react-native-reanimated'\nconst { width } = Dimensions.get('window')\n\nlet { interpolateNode: interpolate, proc, multiply, add, sub, block, set, abs } = Animated\n\nif (!proc) {\n  proc = fn => fn\n}\n\nconst gravity = Math.PI / 2\nconst influenceDist = width / 2\n\n\nconst rotateYProc = proc(rotateAmtX => interpolate(rotateAmtX, {\n  inputRange: [-1, -0.25, 0, 0.25, 1],\n  outputRange: [0, -gravity, 0, gravity, 0],\n  extrapolate: Animated.Extrapolate.CLAMP,\n}))\n\nconst rotateXProc = proc(rotateAmtY => interpolate(rotateAmtY, {\n  inputRange: [-1, -0.25, 0, 0.25, 1],\n  outputRange: [0, gravity, 0, -gravity, 0],\n  extrapolate: Animated.Extrapolate.CLAMP,\n}))\n\nconst scaleProc = proc((pctX, pctY, multiplier) => interpolate(\n  multiply(\n    add(pctX, pctY), \n    multiplier\n  ), {\n  inputRange: [0, 2],\n  outputRange: [1, 0.85],\n}))\n\nconst diffXRatioProc = proc((centerX, screenX) => interpolate(sub(centerX, screenX), {\n  inputRange: [-influenceDist, 0, influenceDist],\n  outputRange: [-1, 0, 1],\n  extrapolate: Animated.Extrapolate.CLAMP,\n}))\n\nconst diffYRatioProc = proc((centerY, screenY) => interpolate(sub(centerY, screenY), {\n  inputRange: [-influenceDist, 0, influenceDist],\n  outputRange: [-1, 0, 1],\n  extrapolate: Animated.Extrapolate.CLAMP,\n}))\n\nconst pctProc = proc((val) => interpolate(val, {\n  inputRange: [-1, 0, 1],\n  outputRange: [0, 1, 0],\n  extrapolate: Animated.Extrapolate.CLAMP,\n}))\n\nconst multProc = proc((v1, v2, v3) => multiply(v1, v2, v3))\n\nexport const combinedXProc = proc((centerX, centerY, screenX, screenY, multiplier) => multProc(\n  rotateXProc(\n    diffYRatioProc(centerY, screenY)\n  ), pctProc(diffXRatioProc(centerX, screenX)), multiplier)\n  )\n\nexport const combinedYProc = proc((centerX, centerY, screenX, screenY, multiplier) => multProc(\n  rotateYProc(\n    diffXRatioProc(centerX, screenX)\n  ), pctProc(diffYRatioProc(centerY, screenY)), multiplier)\n  )\n\nconst setPan = proc((pan, translationX, newTransX, translationY, newTransY) => block([\n  set(pan,\n    add(\n      pan,\n      abs(sub(translationX, newTransX)),\n      abs(sub(translationY, newTransY)),\n    )\n  ),\n  set(translationX, newTransX),\n  set(translationY, newTransY),\n]))\n\nconst reset = proc((v1, v2, v3, v4) => block([\n  set(v1, 0),\n  set(v2, 0),\n  set(v3, 0),\n  set(v4, 0)\n]))\n\nexport const Procs = {\n  rotateY: rotateYProc,\n  rotateX: rotateXProc,\n  scale: scaleProc,\n  diffXRatio: diffXRatioProc,\n  diffYRatio: diffYRatioProc,\n  pct: pctProc,\n  mult: multProc,\n  combinedX: combinedXProc,\n  combinedY: combinedYProc,\n  setPan,\n  reset,\n}","import React, { useState } from 'react';\nimport {\n  Dimensions,\n  View,\n  SafeAreaView,\n  StyleSheet,\n  Platform,\n  TouchableOpacity,\n} from 'react-native';\nimport Animated, { concat } from 'react-native-reanimated';\nimport BackButton from '../components/BackButton';\nimport {\n  PanGestureHandler,\n  TapGestureHandler,\n  LongPressGestureHandler,\n  State,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { Procs } from '../procs/grid';\nimport spring from '../procs/springFill';\nconst { width, height } = Dimensions.get('window');\n\nconst screenSize = Math.min(width, height)\n\nlet {\n  and,\n  set,\n  neq,\n  cond,\n  eq,\n  add,\n  block,\n  startClock,\n  stopClock,\n  clockRunning,\n  sub,\n  Value,\n  Clock,\n  event,\n  abs,\n  min,\n  interpolateNode: interpolate,\n  proc,\n  debug,\n  call,\n} = Animated;\n\nif (!proc) {\n  proc = (fn) => fn;\n}\n\nconst isAndroid = Platform.OS === 'android';\n\nconst cardsPerRow = 8;\nconst engageDist = screenSize / 8;\n\nconst numCards = Math.pow(cardsPerRow, 2);\nconst cardSize = (screenSize - 2) / Math.sqrt(numCards);\nconst padding = cardSize / 20;\n\ntype Props = {};\n\ntype Card = {\n  color: string;\n  rotateX: Animated.Node<number>;\n  rotateY: Animated.Node<number>;\n  scale: Animated.Node<number>;\n};\n\nclass Grid extends React.Component<Props> {\n  mountTimer = Date.now();\n\n  pan: Animated.Value<number>;\n  gestureState: Animated.Value<State>;\n  translationX: Animated.Value<number>;\n  translationY: Animated.Value<number>;\n  screenX: Animated.Value<number>;\n  screenY: Animated.Value<number>;\n  clock: Animated.Clock;\n  sprState: Animated.SpringState;\n  sprConfig: Animated.SpringConfig;\n  panRatio: Animated.Node<number>;\n  cards: Card[];\n  onGestureEvent: (event: PanGestureHandlerGestureEvent) => void;\n  onHandlerStateChange: (event: PanGestureHandlerGestureEvent) => void;\n  onTapStateChange: (event: any) => void;\n  tapState: Animated.Value<State>;\n\n  constructor(props: any) {\n    super(props);\n    this.pan = new Value(0);\n    this.tapState = new Value(State.UNDETERMINED);\n    this.gestureState = new Value(State.UNDETERMINED);\n    this.translationX = new Value(0);\n    this.translationY = new Value(0);\n    this.screenX = new Value(0);\n    this.screenY = new Value(0);\n    this.clock = new Clock();\n\n    this.sprState = {\n      finished: new Value(0),\n      velocity: new Value(0),\n      position: new Value(0),\n      time: new Value(0),\n    };\n\n    this.sprConfig = {\n      damping: 20,\n      mass: 0.3,\n      stiffness: 30,\n      overshootClamping: false,\n      toValue: new Value(0),\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    this.panRatio = 1;\n\n    const multiplier = this.sprState.position;\n    const colorMultiplier = 255 / numCards;\n\n    this.cards = [...Array(numCards)].fill(0).map((_d, i) => {\n      const row = Math.floor(i / cardsPerRow);\n      const col = i - cardsPerRow * row;\n      const centerY = cardSize * row + cardSize / 2;\n      const centerX = cardSize * col + cardSize / 2;\n      const diffXRatio = Procs.diffXRatio(centerX, this.screenX);\n      const diffYRatio = Procs.diffYRatio(centerY, this.screenY);\n\n      const pctY = Procs.pct(diffYRatio);\n      const pctX = Procs.pct(diffXRatio);\n\n      const color = `rgba(${i * colorMultiplier}, ${Math.abs(\n        128 - i * colorMultiplier\n      )}, ${255 - i * colorMultiplier}, 0.9)`;\n\n      return {\n        color,\n        rotateX: Procs.mult(Procs.rotateX(diffYRatio), pctX, multiplier),\n        rotateY: Procs.mult(Procs.rotateY(diffXRatio), pctY, multiplier),\n        scale: Procs.scale(pctX, pctY, multiplier),\n      };\n    });\n\n    this.onGestureEvent = event([\n      {\n        nativeEvent: ({ translationX, translationY, x, y }) =>\n          block([\n            cond(eq(this.gestureState, State.ACTIVE), [\n              Procs.setPan(\n                this.pan,\n                this.translationX,\n                translationX,\n                this.translationY,\n                translationY\n              ),\n              set(this.screenX, x),\n              set(this.screenY, y),\n            ]),\n          ]),\n      },\n    ]);\n\n    this.onTapStateChange = event([\n      {\n        nativeEvent: ({ state, oldState, x, y }) =>\n          block([\n            cond(eq(state, State.BEGAN), [\n              cond(clockRunning(this.clock), stopClock(this.clock)),\n              set(this.screenX, x),\n              set(this.screenY, y),\n              set(this.sprConfig.toValue, 1),\n              startClock(this.clock),\n            ]),\n            cond(eq(state, State.END), [\n              set(this.sprConfig.toValue, 0),\n              startClock(this.clock),\n            ]),\n          ]),\n      },\n    ]);\n\n    this.onHandlerStateChange = event([\n      {\n        nativeEvent: ({ state, oldState }) =>\n          block([\n            cond(and(neq(state, oldState), eq(state, State.END)), [\n              cond(clockRunning(this.clock), stopClock(this.clock)),\n              set(this.sprConfig.toValue, 0),\n              startClock(this.clock),\n            ]),\n            set(this.gestureState, state),\n          ]),\n      },\n    ]);\n  }\n\n  panRef = React.createRef();\n  tapRef = React.createRef();\n  longPressRef = React.createRef();\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <SafeAreaView style={styles.flex}>\n          <View style={styles.center}>\n            <LongPressGestureHandler\n              ref={this.longPressRef}\n              minDurationMs={100}\n              maxDist={0}\n              simultaneousHandlers={[\n                this.longPressRef,\n                this.tapRef,\n                this.panRef,\n              ]}\n              onHandlerStateChange={this.onTapStateChange}>\n              <Animated.View>\n                <TapGestureHandler\n                  ref={this.tapRef}\n                  onHandlerStateChange={this.onTapStateChange}\n                  simultaneousHandlers={[\n                    this.longPressRef,\n                    this.tapRef,\n                    this.panRef,\n                  ]}>\n                  <Animated.View>\n                    <PanGestureHandler\n                      ref={this.panRef}\n                      simultaneousHandlers={[\n                        this.longPressRef,\n                        this.tapRef,\n                        this.panRef,\n                      ]}\n                      onGestureEvent={this.onGestureEvent}\n                      onHandlerStateChange={this.onHandlerStateChange}>\n                      <Animated.View style={styles.cardContainer}>\n                        {this.cards.map((item) => (\n                          <GridItem {...item} />\n                        ))}\n                      </Animated.View>\n                    </PanGestureHandler>\n                  </Animated.View>\n                </TapGestureHandler>\n              </Animated.View>\n            </LongPressGestureHandler>\n          </View>\n        </SafeAreaView>\n        <BackButton />\n        <Animated.Code>\n          {() =>\n            cond(clockRunning(this.clock), [\n              spring(this.clock, this.sprState, this.sprConfig),\n              cond(this.sprState.finished, [\n                stopClock(this.clock),\n                set(this.sprState.finished, 0),\n              ]),\n            ])\n          }\n        </Animated.Code>\n      </View>\n    );\n  }\n}\n\nexport default Grid;\n\nconst GridItem = ({ color, rotateX, rotateY, scale }, index) => {\n  const [opacity, setOpacity] = useState(1);\n  return (\n    <View\n      key={`grid-card-${index}`}\n      style={{\n        width: cardSize,\n        height: cardSize,\n        padding,\n      }}>\n      <Animated.View\n        style={{\n          flex: 1,\n          opacity,\n          backgroundColor: color,\n          borderRadius: cardSize / 10,\n          transform: [\n            { rotateX: Animated.concat(rotateX, 'rad') },\n            { rotateY: Animated.concat(rotateY, 'rad') },\n            { scaleX: scale },\n            { scaleY: scale },\n          ],\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'seashell',\n    width: cardsPerRow * cardSize,\n  },\n  flex: {\n    flex: 1,\n  },\n  center: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n});\n","import React from \"react\";\nimport { Dimensions, View, StyleSheet, SafeAreaView } from \"react-native\";\nimport Animated from \"react-native-reanimated\";\nimport {\n  PanGestureHandler,\n  State,\n  TapGestureHandler,\n  PanGestureHandlerGestureEvent,\n  PanGestureHandlerStateChangeEvent,\n  TapGestureHandlerStateChangeEvent,\n} from \"react-native-gesture-handler\";\nimport BackButton from \"../components/BackButton\";\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\n\nconst {\n  and,\n  not,\n  set,\n  neq,\n  cond,\n  eq,\n  or,\n  add,\n  multiply,\n  greaterThan,\n  lessThan,\n  floor,\n  spring,\n  divide,\n  block,\n  round,\n  startClock,\n  stopClock,\n  clockRunning,\n  sub,\n  Value,\n  Clock,\n  event,\n  abs,\n  color,\n  max,\n  min,\n  onChange,\n  debug,\n} = Animated;\n\nconst numCards = 7;\nconst rampDist = 100;\n\nclass Book extends React.Component {\n  _mounted: Animated.Value<number>;\n  perspective: Animated.Value<number>;\n  rawTrans: Animated.Value<number>;\n  prevTrans: Animated.Value<number>;\n  gestureState: Animated.Value<State>;\n  absPan: Animated.Value<number>;\n  panPct: Animated.Adaptable<number>;\n  transX: Animated.Adaptable<number>;\n  clock: Animated.Clock;\n  sprState: Animated.SpringState;\n  sprConfig: Animated.SpringConfig;\n  centerClock: Animated.Clock;\n  centerSprState: Animated.SpringState;\n  centerSprConfig: Animated.SpringConfig;\n  cumulativeTrans: Animated.Node<number>;\n  cardPanWidth: number;\n  currentIndex: Animated.Node<number>;\n  onTapStateChange: (e: TapGestureHandlerStateChangeEvent) => void;\n  onGestureEvent: (e: PanGestureHandlerGestureEvent) => void;\n  onHandlerStateChange: (e: PanGestureHandlerStateChangeEvent) => void;\n  cards;\n\n  constructor(props) {\n    super(props);\n    const width = Math.min(screenWidth, screenHeight) * 0.4;\n    const height = width * 2;\n    this._mounted = new Value(1);\n\n    this.perspective = new Value(850);\n    this.rawTrans = new Value(0);\n    this.prevTrans = new Value(width);\n    this.gestureState = new Value(State.UNDETERMINED);\n    this.absPan = new Value(0);\n\n    this.panPct = Animated.interpolateNode(this.absPan, {\n      inputRange: [0, rampDist],\n      outputRange: [0, 1],\n      extrapolate: Animated.Extrapolate.CLAMP,\n    });\n\n    this.transX = multiply(this.rawTrans, this.panPct);\n\n    this.clock = new Clock();\n\n    this.sprState = {\n      position: new Value(0),\n      velocity: new Value(0),\n      finished: new Value(0),\n      time: new Value(0),\n    };\n\n    this.sprConfig = {\n      damping: 8,\n      mass: 1,\n      stiffness: new Value(50.296),\n      overshootClamping: false,\n      toValue: new Value(1),\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    this.centerClock = new Clock();\n    this.centerSprState = {\n      position: this.prevTrans,\n      velocity: new Value(0),\n      finished: new Value(0),\n      time: new Value(0),\n    };\n\n    this.centerSprConfig = {\n      damping: 8,\n      mass: 1,\n      stiffness: new Value(50.296),\n      overshootClamping: false,\n      toValue: new Value(1),\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n    };\n\n    const resetCenterClock = [\n      stopClock(this.centerClock),\n      set(this.centerSprState.velocity, 0),\n      set(this.centerSprState.time, 0),\n      set(this.centerSprState.finished, 0),\n    ];\n\n    const runCenterClock = [\n      cond(clockRunning(this.centerClock), [\n        spring(this.centerClock, this.centerSprState, this.centerSprConfig),\n        cond(\n          or(this.centerSprState.finished, not(this._mounted)),\n          resetCenterClock\n        ),\n      ]),\n      this.centerSprState.position,\n    ];\n\n    this.cumulativeTrans = add(this.transX, runCenterClock);\n    const panRange = width * 2;\n    this.cardPanWidth = panRange / numCards;\n    this.currentIndex = divide(this.cumulativeTrans, this.cardPanWidth);\n\n    const resetClock = [\n      stopClock(this.clock),\n      set(this.sprState.velocity, 0),\n      set(this.sprState.finished, 0),\n      set(this.sprState.time, 0),\n    ];\n\n    const runClock = [\n      cond(clockRunning(this.clock), [\n        spring(this.clock, this.sprState, this.sprConfig),\n        cond(or(this.sprState.finished, not(this._mounted)), resetClock),\n      ]),\n      this.sprState.position,\n    ];\n\n    this.cards = [...Array(numCards)].fill(0).map((d, index, arr) => {\n      const colorMultiplier = 255 / arr.length;\n      // const color = `rgba(${index * colorMultiplier}, ${Math.abs(128 - index * colorMultiplier)}, ${255 - (index * colorMultiplier)}, 0.9)`\n\n      const rotateY = Animated.interpolateNode(this.currentIndex, {\n        inputRange: [index - 1.25, index, index + 1.25],\n        outputRange: [0, Math.PI / 2, Math.PI],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      });\n\n      const zIndex = Animated.interpolateNode(this.currentIndex, {\n        inputRange: [index - 1, index, index + 1],\n        outputRange: [-999 - index, 999, -999 + index],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      });\n\n      const colorIndex = cond(\n        greaterThan(index, this.currentIndex),\n        index,\n        index + 1\n      );\n\n      const c = multiply(colorIndex, colorMultiplier);\n      const r = round(c);\n      const g = round(abs(sub(128, c)));\n      const b = round(sub(255, c));\n      const cardColor = color(r, g, b);\n\n      const toVal = cond(lessThan(this.currentIndex, index), 0, Math.PI);\n\n      const springRotateY = add(\n        multiply(runClock, toVal),\n        multiply(sub(1, runClock), rotateY)\n      );\n\n      return {\n        color: cardColor,\n        width,\n        height,\n        rotateY: Animated.concat(springRotateY, \"rad\"),\n        zIndex: round(zIndex),\n      };\n    });\n\n    const tapState = new Value(State.UNDETERMINED);\n\n    this.onGestureEvent = event([\n      {\n        nativeEvent: ({ translationX }) =>\n          block([\n            cond(eq(this.gestureState, State.ACTIVE), [\n              cond(\n                or(\n                  and(\n                    greaterThan(this.currentIndex, -1),\n                    lessThan(this.currentIndex, numCards)\n                  ),\n                  and(\n                    not(greaterThan(this.currentIndex, -1)),\n                    greaterThan(translationX, this.rawTrans)\n                  ),\n                  and(\n                    not(lessThan(this.currentIndex, numCards)),\n                    lessThan(translationX, this.rawTrans)\n                  )\n                ),\n                [\n                  set(\n                    this.absPan,\n                    add(this.absPan, abs(sub(this.rawTrans, translationX)))\n                  ),\n                  set(this.rawTrans, translationX),\n                ]\n              ),\n              cond(clockRunning(this.clock), [\n                stopClock(this.clock),\n                set(this.sprState.finished, 0),\n                set(this.sprState.time, 0),\n                set(this.sprState.velocity, 0),\n              ]),\n              cond(clockRunning(this.centerClock), resetCenterClock),\n              cond(\n                greaterThan(this.sprState.position, 0),\n                set(\n                  this.sprState.position,\n                  max(0, multiply(this.sprState.position, 0.5))\n                )\n              ),\n            ]),\n          ]),\n      },\n    ]);\n\n    const layFlat = [\n      set(\n        this.centerSprConfig.toValue,\n        add(\n          multiply(floor(this.currentIndex), this.cardPanWidth),\n          this.cardPanWidth / 2\n        )\n      ),\n      set(this.prevTrans, add(this.prevTrans, this.transX)),\n      set(this.rawTrans, 0),\n      set(this.absPan, 0),\n      set(this.sprConfig.toValue, 1),\n      startClock(this.centerClock),\n      startClock(this.clock),\n    ];\n\n    this.onHandlerStateChange = event([\n      {\n        nativeEvent: ({ state }) =>\n          block([\n            cond(\n              and(\n                eq(this.gestureState, State.ACTIVE),\n                neq(state, State.ACTIVE)\n              ),\n              [layFlat]\n            ),\n            set(this.gestureState, state),\n          ]),\n      },\n    ]);\n\n    const minMax = (val, minVal, maxVal) => min(maxVal, max(minVal, val));\n\n    this.onTapStateChange = event([\n      {\n        nativeEvent: ({ state, x }) =>\n          block([\n            set(tapState, state),\n            onChange(tapState, [\n              cond(eq(tapState, State.END), [\n                // Tap in center of screen\n                cond(\n                  and(\n                    greaterThan(x, screenWidth * 0.4),\n                    lessThan(x, screenWidth * 0.6)\n                  ),\n                  layFlat,\n                  [\n                    // Tap on sides of screen\n                    resetClock,\n                    resetCenterClock,\n\n                    set(this.sprConfig.toValue, 0),\n                    startClock(this.clock),\n\n                    set(\n                      this.centerSprConfig.toValue,\n                      multiply(\n                        this.cardPanWidth,\n                        minMax(\n                          add(\n                            this.currentIndex,\n                            cond(greaterThan(x, screenWidth / 2), -1, 1)\n                          ),\n                          -0.5,\n                          numCards - 0.5\n                        )\n                      )\n                    ),\n                    startClock(this.centerClock),\n                  ]\n                ),\n              ]),\n            ]),\n          ]),\n      },\n    ]);\n  }\n\n  renderCard = ({ color, width, height, rotateY, zIndex }, index) => {\n    return (\n      <Animated.View\n        key={`book-card-${index}`}\n        style={{\n          position: \"absolute\",\n          width: width * 2,\n          height,\n          zIndex,\n        }}\n      >\n        <Animated.View\n          style={{\n            width: width * 2,\n            height,\n            transform: [{ perspective: this.perspective }, { rotateY }],\n          }}\n        >\n          <Animated.View\n            style={{\n              opacity: 0.85,\n              borderTopLeftRadius: 10,\n              borderBottomLeftRadius: 10,\n              backgroundColor: color,\n              width: width,\n              height,\n            }}\n          />\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: \"seashell\",\n        }}\n      >\n        <SafeAreaView style={{ flex: 1 }}>\n          <PanGestureHandler\n            onGestureEvent={this.onGestureEvent}\n            onHandlerStateChange={this.onHandlerStateChange}\n          >\n            <Animated.View\n              style={{\n                ...StyleSheet.absoluteFillObject,\n              }}\n            >\n              <TapGestureHandler onHandlerStateChange={this.onTapStateChange}>\n                <Animated.View\n                  style={{\n                    ...StyleSheet.absoluteFillObject,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    transform: [\n                      { perspective: this.perspective },\n                      { rotateX: Math.PI / 12 + \"deg\" },\n                    ],\n                  }}\n                >\n                  {this.cards.map(this.renderCard)}\n                </Animated.View>\n              </TapGestureHandler>\n            </Animated.View>\n          </PanGestureHandler>\n        </SafeAreaView>\n        <BackButton />\n      </View>\n    );\n  }\n}\n\nexport default Book;\n","import React from 'react'\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport Menu from \"../screens/Menu\"\nimport Dots from '../screens/Dots'\nimport CardRotate from '../screens/CardRotate'\nimport CardFlip from '../screens/CardFlip' \nimport CardStack from '../screens/CardStack'\nimport Carousel from '../screens/Carousel'\nimport Deck from '../screens/Deck'\nimport Grid from '../screens/Grid' \nimport Book from '../screens/Book'               \n\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator()\n\nconst screens = {\n  Menu,\n  Dots,\n  Card: CardRotate,\n  Stack: CardStack,\n  Carousel,\n  Deck,\n  Flip: CardFlip,   \n  Grid,\n  Book,\n} \n\nexport default function Navigator() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator \n        initialRouteName='Menu'\n        screenOptions={{ headerShown: false }}\n        >            \n        {Object.entries(screens).map(([k, v]) => {\n          return (\n            <Stack.Screen \n              key={k}\n              name={k}\n              component={v}   \n            />\n          )\n        })}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","import React from \"react\";\nimport { StatusBar } from \"react-native\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport Navigator from \"./nav/Navigator\";\n\nif (window && typeof setImmediate === \"undefined\") {\n  window.setImmediate = function (fn) {\n    return setTimeout(fn, 0);\n  };\n}\n\nconst App = () => {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <StatusBar hidden />\n      <Navigator />\n    </GestureHandlerRootView>\n  );\n};\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [178], () => (__webpack_require__(2349)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Value","Animated","modulo","add","sub","multiply","divide","startClock","stopClock","clockRunning","cond","set","timing","round","isAndroid","Platform","OS","StackPreview","_React$Component","props","_this","_classCallCheck","renderCard","_ref","i","perspective","color","scale","translateY","zIndex","rotateX","size","gestureState","index","_jsx","style","alignItems","justifyContent","position","width","height","backgroundColor","borderRadius","transform","scaleX","scaleY","children","flex","Text","fontSize","fontWeight","focused","clock","tickHeight","mainHandler","React","translationY","prevTrans","cumulativeTrans","auto","previewState","finished","time","frameTime","previewConfig","toValue","duration","easing","Easing","linear","runClock","_tempOffset","activeIndex","inputRange","outputRange","cards","_toConsumableArray","Array","fill","map","d","arr","colorMultiplier","length","interpolatedY","transToIndex","iosConfig","androidConfig","scaleXY","extrapolate","CLAMP","maxIndex","colorIndex","Math","abs","_inherits","_createClass","key","value","View","padding","overflow","this","diff","min","sin","CarouselPreview","handlerRef","cardTransY","cardClock","cardState","cardConfig","cardGestureState","translateX","rotateY","translationX","activeCardIndex","animState","animConfig","out","ease","altState","velocity","altConfig","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","tickWidth","_temp","interpolated","leanAmt","PI","numCards","floor","FlipPreview","_ref2","startIndexY","prevX","prevY","_cy","_cx","_iy","_ix","indexX","indexY","targetX","targetY","_mx","_my","_isInverted","c","r","g","b","springState","springConfig","diffX","diffY","_px","_py","_x","_y","_this$props","_jsxs","top","right","opacity","concat","and","greaterThan","spring","block","Clock","cos","Deck","_Component","rotateZ","state","config","ic","State","UNDETERMINED","_mounted","sprState","sprConfig","ry","midpoint","ratio","multiplier","maxY","scaleMultiplier","iy","xOffset","ix","touchScale","inOut","Component","GridPreview","engageDist","pow","cardSize","sqrt","pan","screenX","screenY","panRatio","flexDirection","flexWrap","Book","borderTopLeftRadius","borderBottomLeftRadius","screenWidth","rawTrans","transX","panPct","cardPanWidth","currentIndex","panIndex","_objectSpread","StyleSheet","absoluteFillObject","Dot","renderDot","x","y","dotSize","translate","dropZoneRadius","ringScales","dropZoneRotate","scaleConfig","scaleVal","dropZoneScale","dots","dragX","dragY","startX","startY","dotScaleState","dotScaleConfig","dotColor","start","prev","drag","endClock","endState","disabled","ringR","ringG","ringB","ringA","ringClock","ringState","ringConfig","ringColor","ring","a","rgb","intersects","create","container","MenuTitle","arguments","text","_Dimensions$get","Dimensions","get","screenSize","colors","end","screens","title","screen","Preview","DeckPreview","BookPreview","titleColor","DotPreview","Menu","_len","args","_key","renderOption","margin","borderColor","borderWidth","LinearGradient","TouchableOpacity","onPress","setValue","navigation","navigate","toUpperCase","renderBackground","focusListener","addListener","ScrollView","showsVerticalScrollIndicator","paddingTop","paddingBottom","useNavigation","insets","useSafeAreaInsets","marginTop","goBack","proc","betterSpring","prevPosition","springFill","betterTimingInOut","betterTimingLinear","timingFill","eq","lessThan","neq","or","not","reset4","v1","v2","v3","v4","onPanStateChange","panGestureState","newState","onDotActive","onDotInactive","dotActive","ACTIVE","onTapStateChange","currentState","BEGAN","END","centerX","centerY","xl","xr","yt","yb","getCenter","radius","setActiveDotVals","rgbR","rgbG","rgbB","placeholderR","placeholderG","placeholderB","placeholderA","resetRing","getScale","endPos","endDisabled","dotPos","additionalScale","getTranslate","pos","ringClockRunning","stopRingClock","startScaleClock","ringPos","ringFin","ringVel","ringTime","ringScaleDisabled","onPanGestureEvent","placeholderX","placeholderY","getDropZoneScale","getRingOpacity","scaleToValue","ringToValue","ringOut","ringDisabled","startEndClock","startRingClock","reset3","dotCenterX","dotCenterY","dotRadius","Dots","panRef","onLongPressStateChange","runCode","outerStyle","innerStyle","PanGestureHandler","ref","onGestureEvent","onHandlerStateChange","styles","LongPressGestureHandler","simultaneousHandlers","maxDist","TapGestureHandler","renderPlaceholder","placeholderStyle","pointerEvents","renderRing","_ref3","ringStyle","renderDropZone","borderStyle","left","rotate","rotState","dropZoneClock","rotClock","rotConfig","scaleState","procs","startPos","dotCenter","endConfig","ringOpacity","placeholder","endClockRunning","defined","stopEndClock","mainClockRunning","stopMainClock","longPressGestureState","tapGestureState","event","nativeEvent","_ref4","_ref5","_ref6","_ref7","max","_this2","SafeAreaView","BackButton","Card","_lastX","_lastY","hasMoved","isActive","startClockIfStopped","reset","stopClockIfFinished","stopClockIfStarted","tapState","tapSpr","tapCfg","tapClock","px","py","cumulativeY","cumulativeX","sizeInterpolatedY","sizeInterpolatedX","modX","modY","isInverted","rawX","shadowScale","interpolate","fn","resetSpring","indexToTrans","setDiffIndex","diffIndex","diffTrans","tempOffset","setSprConfig","flingThresh","gestureIsEnded","velocityY","getActiveIndex","setPrevTrans","CardStack","_","getDiffSmoothed","prevDiff","diffAmt","getTransToIndex","len","getRotateX","getRotateY","getScaleXY","getTranslateX","getZIndex","isWeb","Carousel","tapHandler","altClock","_prevLeanAmt","diffSmoothed","onChange","velocityX","_d","innerTransform","outerTransform","willBlurSub","_this$willBlurSub","remove","_createElement","CarouselCard","dependencies","getXInput","onPanEnd","onPanActive","getDirectionalVal","val","clockTrans","gravity","influenceDist","rotateYProc","rotateAmtX","rotateXProc","rotateAmtY","scaleProc","pctX","pctY","diffXRatioProc","diffYRatioProc","pctProc","multProc","combinedXProc","combinedYProc","setPan","newTransX","newTransY","Procs","diffXRatio","diffYRatio","pct","mult","combinedX","combinedY","Grid","mountTimer","Date","now","tapRef","longPressRef","row","oldState","center","minDurationMs","cardContainer","item","GridItem","_useState","useState","_useState2","_slicedToArray","screenHeight","absPan","centerClock","centerSprState","centerSprConfig","resetCenterClock","runCenterClock","panRange","resetClock","cardColor","toVal","springRotateY","layFlat","minVal","maxVal","Stack","createStackNavigator","CardRotate","Flip","CardFlip","Navigator","NavigationContainer","initialRouteName","screenOptions","headerShown","Object","entries","k","v","Screen","name","component","window","setImmediate","setTimeout","GestureHandlerRootView","StatusBar","hidden","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}